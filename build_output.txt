   Compiling pokemongo v0.1.0 (C:\Users\w2107\Desktop\pk1\pokemongo)
warning: pokemongo@0.1.0: native feature鏈惎鐢紝璺宠繃C++妯″潡缂栬瘧
warning: unused imports: `error` and `warn`
  --> src\core\config.rs:22:21
   |
22 | use tracing::{info, warn, error, debug};
   |                     ^^^^  ^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `Arc`
 --> src\core\event_system.rs:7:17
  |
7 | use std::sync::{Arc, Mutex, RwLock};
  |                 ^^^

warning: unused import: `HashSet`
 --> src\core\resource_manager.rs:6:33
  |
6 | use std::collections::{HashMap, HashSet};
  |                                 ^^^^^^^

warning: unused import: `TypeId`
  --> src\core\resource_manager.rs:10:21
   |
10 | use std::any::{Any, TypeId};
   |                     ^^^^^^

warning: unused import: `error`
  --> src\core\resource_manager.rs:13:30
   |
13 | use log::{info, warn, debug, error};
   |                              ^^^^^

warning: unused import: `LevelFilter`
  --> src\utils\logger.rs:14:18
   |
14 | use log::{Level, LevelFilter, Log, Metadata, Record};
   |                  ^^^^^^^^^^^

warning: unused import: `Hash`
  --> src\utils\mod.rs:14:17
   |
14 | use std::hash::{Hash, Hasher};
   |                 ^^^^

warning: unused imports: `debug`, `error`, `info`, and `warn`
  --> src\utils\mod.rs:16:11
   |
16 | use log::{info, debug, warn, error};
   |           ^^^^  ^^^^^  ^^^^  ^^^^^

warning: unused import: `GameError`
 --> src\assets\cache.rs:5:19
  |
5 | use crate::core::{GameError, Result};
  |                   ^^^^^^^^^

warning: unused import: `VecDeque`
 --> src\assets\cache.rs:7:33
  |
7 | use std::collections::{HashMap, VecDeque};
  |                                 ^^^^^^^^

warning: unused import: `Hash`
 --> src\assets\cache.rs:8:17
  |
8 | use std::hash::{Hash, Hasher};
  |                 ^^^^

warning: unused import: `Arc`
 --> src\assets\cache.rs:9:17
  |
9 | use std::sync::{Arc, RwLock, Mutex};
  |                 ^^^

warning: unused import: `SystemTime`
  --> src\assets\cache.rs:10:36
   |
10 | use std::time::{Duration, Instant, SystemTime};
   |                                    ^^^^^^^^^^

warning: unused imports: `error` and `warn`
  --> src\assets\cache.rs:11:24
   |
11 | use log::{info, debug, warn, error};
   |                        ^^^^  ^^^^^

warning: unused imports: `Cursor` and `Read`
 --> src\assets\compression.rs:8:15
  |
8 | use std::io::{Read, Write, Cursor};
  |               ^^^^         ^^^^^^

warning: unused imports: `error` and `warn`
  --> src\assets\compression.rs:10:24
   |
10 | use log::{info, debug, warn, error};
   |                        ^^^^  ^^^^^

warning: unused import: `AssetMetadata`
 --> src\assets\loader.rs:6:32
  |
6 | use crate::assets::{AssetType, AssetMetadata};
  |                                ^^^^^^^^^^^^^

warning: unused import: `error`
  --> src\assets\loader.rs:14:30
   |
14 | use log::{info, debug, warn, error};
   |                              ^^^^^

warning: unused import: `ResourceType`
  --> src\assets\mod.rs:10:70
   |
10 | use crate::core::resource_manager::{ResourceManager, ResourceHandle, ResourceType};
   |                                                                      ^^^^^^^^^^^^

warning: unused import: `error`
  --> src\assets\mod.rs:16:30
   |
16 | use log::{info, debug, warn, error};
   |                              ^^^^^

warning: unused imports: `AudioChannels` and `ThreadPriority`
 --> src\audio\manager.rs:6:39
  |
6 | use crate::audio::{AudioSystemConfig, AudioChannels, AudioBitDepth, ThreadPriority};
  |                                       ^^^^^^^^^^^^^                 ^^^^^^^^^^^^^^

warning: unused import: `error`
  --> src\audio\manager.rs:20:30
   |
20 | use log::{info, debug, warn, error};
   |                              ^^^^^

warning: unused import: `ResourceType`
 --> src\audio\sound.rs:6:70
  |
6 | use crate::core::resource_manager::{ResourceManager, ResourceHandle, ResourceType};
  |                                                                      ^^^^^^^^^^^^

warning: unused imports: `error`, `info`, and `warn`
  --> src\audio\sound.rs:12:11
   |
12 | use log::{info, debug, warn, error};
   |           ^^^^         ^^^^  ^^^^^

warning: unused import: `ResourceHandle`
 --> src\audio\music.rs:6:54
  |
6 | use crate::core::resource_manager::{ResourceManager, ResourceHandle};
  |                                                      ^^^^^^^^^^^^^^

warning: unused imports: `AudioInstance` and `AudioTransform`
 --> src\audio\music.rs:7:35
  |
7 | use crate::audio::{AudioCategory, AudioInstance, AudioTransform};
  |                                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^

warning: unused imports: `Arc` and `Mutex`
  --> src\audio\music.rs:13:17
   |
13 | use std::sync::{Arc, Mutex};
   |                 ^^^  ^^^^^

warning: unused imports: `error` and `warn`
  --> src\audio\music.rs:14:24
   |
14 | use log::{info, debug, warn, error};
   |                        ^^^^  ^^^^^

warning: unused import: `std::sync::Arc`
  --> src\creature_engine\mod.rs:12:5
   |
12 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
  --> src\creature_engine\templates.rs:20:5
   |
20 | use std::time::Duration;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `CreatureTrait`
  --> src\creature_engine\templates.rs:22:72
   |
22 | use super::{CreatureEngineError, CreatureEngineResult, CreatureRarity, CreatureTrait};
   |                                                                        ^^^^^^^^^^^^^

warning: unused import: `VecDeque`
  --> src\creature_engine\evolution_tree.rs:11:42
   |
11 | use std::collections::{HashMap, HashSet, VecDeque};
   |                                          ^^^^^^^^

warning: unused import: `TimeZone`
  --> src\creature_engine\evolution_tree.rs:14:29
   |
14 | use chrono::{DateTime, Utc, TimeZone, Local, Timelike};
   |                             ^^^^^^^^

warning: unused import: `CreatureEngineError`
  --> src\creature_engine\balance_system.rs:15:13
   |
15 | use super::{CreatureEngineError, CreatureEngineResult, GeneratedCreature, CreatureStats};
   |             ^^^^^^^^^^^^^^^^^^^

warning: unused import: `GeneratedCreature`
  --> src\creature_engine\rarity_system.rs:16:74
   |
16 | use super::{CreatureEngineError, CreatureEngineResult, CreatureTemplate, GeneratedCreature};
   |                                                                          ^^^^^^^^^^^^^^^^^

warning: unused import: `GeneratedCreature`
  --> src\creature_engine\trait_system.rs:16:74
   |
16 | use super::{CreatureEngineError, CreatureEngineResult, CreatureTemplate, GeneratedCreature, CreatureRarity};
   |                                                                          ^^^^^^^^^^^^^^^^^

warning: unnecessary parentheses around assigned value
    --> src\creature_engine\trait_system.rs:1030:30
     |
1030 |                 *modifier *= (1.0 + (*base_stat as f64 / 100.0) * 0.1);
     |                              ^                                       ^
     |
     = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
     |
1030 -                 *modifier *= (1.0 + (*base_stat as f64 / 100.0) * 0.1);
1030 +                 *modifier *= 1.0 + (*base_stat as f64 / 100.0) * 0.1;
     |

warning: unused imports: `Beta`, `Gamma`, and `Uniform`
  --> src\creature_engine\mutation.rs:15:26
   |
15 | use rand_distr::{Normal, Uniform, Beta, Gamma};
   |                          ^^^^^^^  ^^^^  ^^^^^

warning: unused import: `CreatureEngineError`
  --> src\creature_engine\mutation.rs:17:13
   |
17 | use super::{CreatureEngineError, CreatureEngineResult, GeneratedCreature, CreatureTrait, CreatureRarity};
   |             ^^^^^^^^^^^^^^^^^^^

warning: variant `Trade_off` should have an upper camel case name
   --> src\creature_engine\mutation.rs:425:5
    |
425 |     Trade_off,
    |     ^^^^^^^^^ help: convert the identifier to upper camel case: `TradeOff`
    |
    = note: `#[warn(non_camel_case_types)]` on by default

warning: variant `Condition_Dependent` should have an upper camel case name
   --> src\creature_engine\mutation.rs:605:5
    |
605 |     Condition_Dependent,
    |     ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `ConditionDependent`

warning: unused import: `HashSet`
  --> src\creature_engine\validator.rs:11:33
   |
11 | use std::collections::{HashMap, HashSet};
   |                                 ^^^^^^^

warning: unused import: `regex::Regex`
  --> src\creature_engine\validator.rs:13:5
   |
13 | use regex::Regex;
   |     ^^^^^^^^^^^^

warning: unused imports: `CreatureTrait` and `Mutation`
  --> src\creature_engine\validator.rs:16:91
   |
16 | use super::{CreatureEngineError, CreatureEngineResult, GeneratedCreature, CreatureConfig, CreatureTrait, Mutation};
   |                                                                                           ^^^^^^^^^^^^^  ^^^^^^^^

warning: ambiguous glob re-exports
  --> src\creature_engine\mod.rs:26:9
   |
26 | pub use templates::*;
   |         ^^^^^^^^^^^^ the name `ValidationError` in the type namespace is first re-exported here
...
32 | pub use validator::*;
   |         ------------ but the name `ValidationError` in the type namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: ambiguous glob re-exports
  --> src\creature_engine\mod.rs:27:9
   |
27 | pub use evolution_tree::*;
   |         ^^^^^^^^^^^^^^^^^ the name `ConditionType` in the type namespace is first re-exported here
...
32 | pub use validator::*;
   |         ------------ but the name `ConditionType` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> src\creature_engine\mod.rs:29:9
   |
29 | pub use rarity_system::*;
   |         ^^^^^^^^^^^^^^^^ the name `EventType` in the type namespace is first re-exported here
30 | pub use trait_system::*;
   |         --------------- but the name `EventType` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> src\creature_engine\mod.rs:30:9
   |
30 | pub use trait_system::*;
   |         ^^^^^^^^^^^^^^^ the name `InheritancePattern` in the type namespace is first re-exported here
31 | pub use mutation::*;
   |         ----------- but the name `InheritancePattern` in the type namespace is also re-exported here

warning: unused imports: `error` and `warn`
  --> src\game_modes.rs:30:24
   |
30 | use log::{info, debug, warn, error};
   |                        ^^^^  ^^^^^

warning: unused import: `warn`
 --> src\player\mod.rs:7:18
  |
7 | use log::{debug, warn, error};
  |                  ^^^^

warning: unused imports: `error` and `warn`
 --> src\player\inventory.rs:7:18
  |
7 | use log::{debug, warn, error};
  |                  ^^^^  ^^^^^

warning: unused imports: `debug` and `warn`
 --> src\player\profile.rs:7:11
  |
7 | use log::{debug, warn};
  |           ^^^^^  ^^^^

warning: unused import: `warn`
 --> src\player\progress.rs:7:18
  |
7 | use log::{debug, warn};
  |                  ^^^^

warning: unused imports: `debug` and `error`
  --> src\save.rs:24:17
   |
24 | use log::{info, debug, warn, error};
   |                 ^^^^^        ^^^^^

warning: unused import: `warn`
 --> src\world\mod.rs:7:18
  |
7 | use log::{debug, warn, error};
  |                  ^^^^

warning: unused imports: `error` and `warn`
 --> src\world\map.rs:7:18
  |
7 | use log::{debug, warn, error};
  |                  ^^^^  ^^^^^

warning: unused imports: `error` and `warn`
 --> src\world\npc.rs:7:18
  |
7 | use log::{debug, warn, error};
  |                  ^^^^  ^^^^^

warning: unused imports: `error` and `warn`
 --> src\world\environment.rs:7:18
  |
7 | use log::{debug, warn, error};
  |                  ^^^^  ^^^^^

warning: unused import: `error`
 --> src\world\events.rs:8:24
  |
8 | use log::{debug, warn, error};
  |                        ^^^^^

warning: unused imports: `error` and `warn`
 --> src\states\mod.rs:7:18
  |
7 | use log::{debug, warn, error};
  |                  ^^^^  ^^^^^

warning: unused imports: `ElementType` and `UIEvent`
 --> src\states\mod.rs:9:28
  |
9 | use crate::ui::{UIManager, UIEvent, ElementType};
  |                            ^^^^^^^  ^^^^^^^^^^^

warning: unused import: `glam::Vec2`
   --> src\states\mod.rs:115:5
    |
115 | use glam::Vec2;
    |     ^^^^^^^^^^

warning: unused import: `error`
 --> src\states\menu.rs:5:24
  |
5 | use log::{debug, warn, error};
  |                        ^^^^^

warning: unused import: `UIEvent`
 --> src\states\menu.rs:7:41
  |
7 | use crate::ui::{UIManager, ElementType, UIEvent};
  |                                         ^^^^^^^

warning: unused imports: `error` and `warn`
 --> src\states\battle.rs:5:18
  |
5 | use log::{debug, warn, error};
  |                  ^^^^  ^^^^^

warning: unused import: `Vec4`
  --> src\states\battle.rs:27:18
   |
27 | use glam::{Vec2, Vec4};
   |                  ^^^^

warning: unused imports: `error` and `warn`
 --> src\states\overworld.rs:5:18
  |
5 | use log::{debug, warn, error};
  |                  ^^^^  ^^^^^

warning: unused import: `error`
 --> src\states\settings.rs:5:24
  |
5 | use log::{debug, warn, error};
  |                        ^^^^^

warning: unused import: `error`
 --> src\states\loading.rs:5:24
  |
5 | use log::{debug, warn, error};
  |                        ^^^^^

warning: unused import: `UIEvent`
  --> src\states\loading.rs:15:41
   |
15 | use crate::ui::{UIManager, ElementType, UIEvent};
   |                                         ^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> src\states\loading.rs:20:5
   |
20 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `warn`
 --> src\input\gamepad.rs:7:18
  |
7 | use log::{debug, warn};
  |                  ^^^^

warning: unused import: `EventSystem`
  --> src\input\mod.rs:16:40
   |
16 | use crate::core::event_system::{Event, EventSystem};
   |                                        ^^^^^^^^^^^

warning: unused import: `warn`
  --> src\input\mod.rs:19:18
   |
19 | use log::{debug, warn};
   |                  ^^^^

warning: unused import: `error`
 --> src\data\mod.rs:8:24
  |
8 | use log::{debug, warn, error, info};
  |                        ^^^^^

warning: unused import: `error`
 --> src\data\loader.rs:9:24
  |
9 | use log::{debug, warn, error, info};
  |                        ^^^^^

warning: unused import: `std::hash::Hash`
 --> src\data\cache.rs:6:5
  |
6 | use std::hash::Hash;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `warn`
 --> src\data\cache.rs:9:18
  |
9 | use log::{debug, warn, info};
  |                  ^^^^

warning: unused imports: `error` and `warn`
 --> src\data\serializer.rs:7:18
  |
7 | use log::{debug, warn, error};
  |                  ^^^^  ^^^^^

warning: unused import: `std::path::Path`
 --> src\data\database.rs:7:5
  |
7 | use std::path::Path;
  |     ^^^^^^^^^^^^^^^

warning: unused imports: `error` and `warn`
 --> src\data\database.rs:8:18
  |
8 | use log::{debug, warn, error, info};
  |                  ^^^^  ^^^^^

warning: unused imports: `error` and `warn`
 --> src\ecs\mod.rs:8:18
  |
8 | use log::{debug, warn, error, info};
  |                  ^^^^  ^^^^^

warning: unused import: `warn`
 --> src\ecs\entity.rs:7:18
  |
7 | use log::{debug, warn};
  |                  ^^^^

warning: unused import: `Any`
 --> src\ecs\component.rs:3:16
  |
3 | use std::any::{Any, TypeId};
  |                ^^^

warning: use of deprecated function `base64::encode`: Use Engine::encode
   --> src\data\database.rs:288:40
    |
288 |             QueryValue::String(base64::encode(&data_bytes)),
    |                                        ^^^^^^
    |
    = note: `#[warn(deprecated)]` on by default

warning: use of deprecated function `base64::decode`: Use Engine::decode
   --> src\data\database.rs:332:46
    |
332 |                     let data_bytes = base64::decode(data_str)
    |                                              ^^^^^^

warning: use of deprecated function `base64::decode`: Use Engine::decode
   --> src\data\database.rs:586:25
    |
586 |                 base64::decode(&result)
    |                         ^^^^^^

warning: use of deprecated function `base64::encode`: Use Engine::encode
   --> src\data\database.rs:629:75
    |
629 |             rusqlite::types::Value::Blob(b) => QueryValue::String(base64::encode(&b)),
    |                                                                           ^^^^^^

error[E0308]: mismatched types
  --> src\core\resource_manager.rs:72:9
   |
69 | impl<T> ResourceHandle<T> {
   |      - expected this type parameter
70 |     pub fn get(&self) -> Option<Arc<RwLock<T>>> {
   |                          ---------------------- expected `std::option::Option<Arc<RwLock<T>>>` because of return type
71 |         let resource = self.resource.read().unwrap();
72 |         resource.as_ref().map(|r| Arc::new(RwLock::new(r.clone())))
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Option<Arc<RwLock<T>>>`, found `Option<Arc<RwLock<&T>>>`
   |
   = note: expected enum `std::option::Option<Arc<RwLock<_>>>`
              found enum `std::option::Option<Arc<RwLock<&_>>>`

error[E0277]: the size for values of type `dyn ResourceLoader<T>` cannot be known at compilation time
   --> src\core\resource_manager.rs:307:61
    |
307 |             if let Some(loader) = loader_any.downcast_ref::<dyn ResourceLoader<T>>() {
    |                                              ------------   ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |                                              |
    |                                              required by a bound introduced by this call
    |
    = help: the trait `Sized` is not implemented for `dyn ResourceLoader<T>`
note: required by an implicit `Sized` bound in `<(dyn std::any::Any + Send + std::marker::Sync + 'static)>::downcast_ref`
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359\library\core\src\any.rs:510:5

error[E0277]: `(dyn std::ops::Fn(LoadProgress) + Send + std::marker::Sync + 'static)` doesn't implement `std::fmt::Debug`
  --> src\assets\loader.rs:59:5
   |
56 | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
...
59 |     pub progress_callback: Option<Arc<dyn Fn(LoadProgress) + Send + Sync>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn std::ops::Fn(LoadProgress) + Send + std::marker::Sync + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
   |
   = help: the trait `std::fmt::Debug` is not implemented for `(dyn std::ops::Fn(LoadProgress) + Send + std::marker::Sync + 'static)`

error[E0599]: no method named `store_resource` found for reference `&'static ResourceManager` in the current scope
   --> src\assets\mod.rs:319:58
    |
319 |                 let handle = ResourceManager::instance().store_resource(
    |                              ----------------------------^^^^^^^^^^^^^^ method not found in `&ResourceManager`

error[E0599]: no method named `store_resource` found for reference `&'static ResourceManager` in the current scope
   --> src\assets\mod.rs:372:46
    |
372 |             Some(ResourceManager::instance().store_resource(
    |                  ----------------------------^^^^^^^^^^^^^^ method not found in `&ResourceManager`

error[E0599]: no method named `get_resource` found for reference `&'static ResourceManager` in the current scope
   --> src\audio\sound.rs:367:14
    |
366 |           let buffer = ResourceManager::instance()
    |  ______________________-
367 | |             .get_resource(&self.buffer)
    | |             -^^^^^^^^^^^^ method not found in `&ResourceManager`
    | |_____________|
    |

error[E0599]: no method named `get_resource` found for reference `&'static ResourceManager` in the current scope
   --> src\audio\sound.rs:390:14
    |
389 |           let buffer = ResourceManager::instance()
    |  ______________________-
390 | |             .get_resource(&self.buffer)
    | |             -^^^^^^^^^^^^ method not found in `&ResourceManager`
    | |_____________|
    |

error[E0599]: no method named `get_resource` found for reference `&'static ResourceManager` in the current scope
   --> src\audio\sound.rs:400:14
    |
399 |           let buffer = ResourceManager::instance()
    |  ______________________-
400 | |             .get_resource(&self.buffer)
    | |             -^^^^^^^^^^^^ method not found in `&ResourceManager`
    | |_____________|
    |

error[E0599]: no method named `get_resource` found for reference `&'static ResourceManager` in the current scope
   --> src\audio\sound.rs:455:14
    |
454 |           let buffer = ResourceManager::instance()
    |  ______________________-
455 | |             .get_resource(&self.buffer)
    | |             -^^^^^^^^^^^^ method not found in `&ResourceManager`
    | |_____________|
    |

error[E0599]: no method named `store_resource` found for reference `&'static ResourceManager` in the current scope
   --> src\audio\music.rs:303:50
    |
303 |         let handle = ResourceManager::instance().store_resource(
    |                      ----------------------------^^^^^^^^^^^^^^ method not found in `&ResourceManager`

error[E0277]: `(dyn StatCalculator + Send + std::marker::Sync + 'static)` doesn't implement `std::fmt::Debug`
  --> src\creature_engine\generator.rs:66:5
   |
61 | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
...
66 |     stat_calculators: HashMap<String, Box<dyn StatCalculator + Send + Sync>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn StatCalculator + Send + std::marker::Sync + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
   |
   = help: the trait `std::fmt::Debug` is not implemented for `(dyn StatCalculator + Send + std::marker::Sync + 'static)`
   = help: the following other types implement trait `std::fmt::Debug`:
             dyn bevy::prelude::Reflect
             dyn bevy::prelude::System<In = In, Out = Out>
             dyn std::any::Any + Send + std::marker::Sync
             dyn std::any::Any + Send
             dyn std::any::Any
             dyn tracing::Value
             dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
             dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: the trait bound `dyn StatCalculator + Send + std::marker::Sync: Clone` is not satisfied
  --> src\creature_engine\generator.rs:66:5
   |
61 | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
66 |     stat_calculators: HashMap<String, Box<dyn StatCalculator + Send + Sync>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `dyn StatCalculator + Send + std::marker::Sync`
   |
   = note: required for `Box<dyn StatCalculator + Send + std::marker::Sync>` to implement `Clone`
   = note: 1 redundant requirement hidden
   = note: required for `HashMap<String, Box<dyn StatCalculator + Send + Sync>>` to implement `Clone`
   = note: the full name for the type has been written to 'C:\Users\w2107\Desktop\pk1\pokemongo\target\debug\deps\pokemongo-b9c7672a5f21966e.long-type-13160307901297617201.txt'
   = note: consider using `--verbose` to print the full type name to the console

error[E0063]: missing field `total` in initializer of `CreatureStats`
   --> src\creature_engine\generator.rs:196:21
    |
196 |         let stats = CreatureStats {
    |                     ^^^^^^^^^^^^^ missing `total`

error[E0308]: mismatched types
   --> src\creature_engine\generator.rs:455:27
    |
455 |             current_seed: self.rng.get_seed()[0],
    |                           ^^^^^^^^^^^^^^^^^^^^^^ expected `u64`, found `u8`

error[E0308]: mismatched types
   --> src\creature_engine\templates.rs:327:21
    |
326 |                 match event {
    |                       ----- this expression has type `notify::Event`
327 |                     Ok(event) if matches!(event.kind, EventKind::Create(_) | EventKind::Modify(_)) => {
    |                     ^^^^^^^^^ expected `Event`, found `Result<_, _>`
    |
    = note: expected struct `notify::Event`
                 found enum `std::result::Result<_, _>`

error[E0308]: mismatched types
   --> src\creature_engine\templates.rs:335:21
    |
326 |                 match event {
    |                       ----- this expression has type `notify::Event`
...
335 |                     Ok(event) if matches!(event.kind, EventKind::Remove(_)) => {
    |                     ^^^^^^^^^ expected `Event`, found `Result<_, _>`
    |
    = note: expected struct `notify::Event`
                 found enum `std::result::Result<_, _>`

error[E0599]: no method named `or_else` found for struct `PathBuf` in the current scope
   --> src\creature_engine\templates.rs:464:14
    |
463 |           let template_path = path.join(format!("{}.json", id))
    |  _____________________________-
464 | |             .or_else(|| path.join(format!("{}.toml", id)))
    | |             -^^^^^^^ method not found in `PathBuf`
    | |_____________|
    |

error[E0599]: no method named `target` found for reference `&petgraph::graph::EdgeReference<'_, EvolutionEdge>` in the current scope
   --> src\creature_engine\evolution_tree.rs:315:48
    |
315 |             let target_node = &self.graph[edge.target()];
    |                                                ^^^^^^ method not found in `&EdgeReference<'_, EvolutionEdge>`
    |
    = help: items from traits can only be used if the trait is in scope
help: trait `EdgeRef` which provides `target` is implemented but not in scope; perhaps you want to import it
    |
11  + use petgraph::visit::EdgeRef;
    |

error[E0599]: no method named `target` found for struct `petgraph::graph::EdgeReference` in the current scope
   --> src\creature_engine\evolution_tree.rs:330:48
    |
330 |             let target_node = &self.graph[edge.target()];
    |                                                ^^^^^^ method not found in `EdgeReference<'_, EvolutionEdge>`
    |
   ::: C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\petgraph-0.6.5\src\visit\mod.rs:228:8
    |
228 |     fn target(&self) -> Self::NodeId;
    |        ------ the method is available for `petgraph::graph::EdgeReference<'_, EvolutionEdge>` here
    |
    = help: items from traits can only be used if the trait is in scope
help: trait `EdgeRef` which provides `target` is implemented but not in scope; perhaps you want to import it
    |
11  + use petgraph::visit::EdgeRef;
    |

error[E0599]: no method named `weekday` found for struct `DateTime` in the current scope
   --> src\creature_engine\evolution_tree.rs:381:35
    |
381 |             let current_day = now.weekday().num_days_from_monday() as u8;
    |                                   ^^^^^^^ method not found in `DateTime<Local>`
    |
   ::: C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\chrono-0.4.41\src\traits.rs:82:8
    |
82  |     fn weekday(&self) -> Weekday;
    |        ------- the method is available for `DateTime<chrono::Local>` here
    |
    = help: items from traits can only be used if the trait is in scope
help: trait `Datelike` which provides `weekday` is implemented but not in scope; perhaps you want to import it
    |
11  + use chrono::Datelike;
    |

error[E0599]: no method named `target` found for reference `&petgraph::graph::EdgeReference<'_, EvolutionEdge>` in the current scope
   --> src\creature_engine\evolution_tree.rs:451:36
    |
451 |                     current = edge.target();
    |                                    ^^^^^^ method not found in `&EdgeReference<'_, EvolutionEdge>`
    |
    = help: items from traits can only be used if the trait is in scope
help: trait `EdgeRef` which provides `target` is implemented but not in scope; perhaps you want to import it
    |
11  + use petgraph::visit::EdgeRef;
    |

error[E0599]: no method named `target` found for reference `&petgraph::graph::EdgeReference<'_, EvolutionEdge>` in the current scope
   --> src\creature_engine\evolution_tree.rs:498:44
    |
498 |                     .find(|e| self.graph[e.target()].creature_id == evolution_id) {
    |                                            ^^^^^^ method not found in `&EdgeReference<'_, EvolutionEdge>`
    |
    = help: items from traits can only be used if the trait is in scope
help: trait `EdgeRef` which provides `target` is implemented but not in scope; perhaps you want to import it
    |
11  + use petgraph::visit::EdgeRef;
    |

error[E0277]: `(dyn PredictiveModel + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\balance_system.rs:372:5
    |
370 | #[derive(Debug)]
    |          ----- in this derive macro expansion
371 | struct BalancePredictor {
372 |     model: Box<dyn PredictiveModel>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn PredictiveModel + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn PredictiveModel + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn FeatureExtractor + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\balance_system.rs:373:5
    |
370 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
373 |     feature_extractors: Vec<Box<dyn FeatureExtractor>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn FeatureExtractor + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn FeatureExtractor + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn AnomalyDetectionAlgorithm + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\rarity_system.rs:282:5
    |
280 | #[derive(Debug)]
    |          ----- in this derive macro expansion
281 | struct AnomalyDetector {
282 |     detection_algorithms: Vec<Box<dyn AnomalyDetectionAlgorithm>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn AnomalyDetectionAlgorithm + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn AnomalyDetectionAlgorithm + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn RarityPredictionModel + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\rarity_system.rs:313:5
    |
311 | #[derive(Debug)]
    |          ----- in this derive macro expansion
312 | struct RarityPredictor {
313 |     prediction_models: Vec<Box<dyn RarityPredictionModel>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn RarityPredictionModel + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn RarityPredictionModel + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn MarketImpactModel + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\rarity_system.rs:350:5
    |
348 | #[derive(Debug)]
    |          ----- in this derive macro expansion
349 | struct MarketImpactAnalyzer {
350 |     impact_models: Vec<Box<dyn MarketImpactModel>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn MarketImpactModel + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn MarketImpactModel + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn FraudDetectionAlgorithm + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\rarity_system.rs:597:5
    |
595 | #[derive(Debug)]
    |          ----- in this derive macro expansion
596 | struct FraudDetector {
597 |     detection_algorithms: Vec<Box<dyn FraudDetectionAlgorithm>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn FraudDetectionAlgorithm + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn FraudDetectionAlgorithm + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn MarketMakerAnalysisAlgorithm + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\rarity_system.rs:659:5
    |
656 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
659 |     analysis_algorithms: Vec<Box<dyn MarketMakerAnalysisAlgorithm>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn MarketMakerAnalysisAlgorithm + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn MarketMakerAnalysisAlgorithm + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0599]: no method named `hour` found for struct `DateTime` in the current scope
    --> src\creature_engine\rarity_system.rs:1006:32
     |
1006 |                 let hour = now.hour() as u8;
     |                                ^^^^
     |
    ::: C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\chrono-0.4.41\src\traits.rs:285:8
     |
285  |     fn hour(&self) -> u32;
     |        ---- the method is available for `DateTime<chrono::Local>` here
     |
     = help: items from traits can only be used if the trait is in scope
help: trait `Timelike` which provides `hour` is implemented but not in scope; perhaps you want to import it
     |
11   + use chrono::Timelike;
     |
help: there is a method `hour12` with a similar name
     |
1006 |                 let hour = now.hour12() as u8;
     |                                    ++

error[E0277]: the trait bound `RarityAnomaly: utils::_::_serde::Serialize` is not satisfied
    --> src\creature_engine\rarity_system.rs:1307:24
     |
1307 | #[derive(Debug, Clone, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `utils::_::_serde::Serialize` is not implemented for `RarityAnomaly`
...
1312 |     pub anomalies: Vec<RarityAnomaly>,
     |     --- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `RarityAnomaly` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `utils::_::_serde::Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 898 others
     = note: required for `std::vec::Vec<RarityAnomaly>` to implement `utils::_::_serde::Serialize`
note: required by a bound in `utils::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `RarityAnomaly: Deserialize<'_>` is not satisfied
    --> src\creature_engine\rarity_system.rs:1312:20
     |
1312 |     pub anomalies: Vec<RarityAnomaly>,
     |                    ^^^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `RarityAnomaly`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `RarityAnomaly` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 932 others
     = note: required for `std::vec::Vec<RarityAnomaly>` to implement `Deserialize<'_>`
note: required by a bound in `next_element`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `RarityAnomaly: Deserialize<'_>` is not satisfied
    --> src\creature_engine\rarity_system.rs:1312:20
     |
1312 |     pub anomalies: Vec<RarityAnomaly>,
     |                    ^^^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `RarityAnomaly`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `RarityAnomaly` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 932 others
     = note: required for `std::vec::Vec<RarityAnomaly>` to implement `Deserialize<'_>`
note: required by a bound in `next_value`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `RarityAnomaly: Deserialize<'_>` is not satisfied
    --> src\creature_engine\rarity_system.rs:1307:35
     |
1307 | #[derive(Debug, Clone, Serialize, Deserialize)]
     |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `RarityAnomaly`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `RarityAnomaly` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 932 others
     = note: required for `std::vec::Vec<RarityAnomaly>` to implement `Deserialize<'_>`
note: required by a bound in `utils::_::_serde::__private::de::missing_field`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
     |
23   | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
     |        ------------- required by a bound in this function
24   | where
25   |     V: Deserialize<'de>,
     |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
     = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `(dyn AntiPatternDetectionAlgorithm + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\trait_system.rs:386:5
    |
383 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
386 |     detection_algorithms: Vec<Box<dyn AntiPatternDetectionAlgorithm>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn AntiPatternDetectionAlgorithm + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn AntiPatternDetectionAlgorithm + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn ConflictResolutionStrategy + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\trait_system.rs:461:5
    |
459 | #[derive(Debug)]
    |          ----- in this derive macro expansion
460 | struct ConflictResolver {
461 |     resolution_strategies: Vec<Box<dyn ConflictResolutionStrategy>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn ConflictResolutionStrategy + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn ConflictResolutionStrategy + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn ConflictLearningAlgorithm + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\trait_system.rs:463:5
    |
459 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
463 |     learning_algorithm: Box<dyn ConflictLearningAlgorithm>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn ConflictLearningAlgorithm + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn ConflictLearningAlgorithm + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn SynergyDiscoveryAlgorithm + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\trait_system.rs:508:5
    |
505 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
508 |     discovery_algorithms: Vec<Box<dyn SynergyDiscoveryAlgorithm>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn SynergyDiscoveryAlgorithm + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn SynergyDiscoveryAlgorithm + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn trait_system::TrendModel + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\trait_system.rs:594:5
    |
591 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
594 |     trend_models: Vec<Box<dyn TrendModel>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn trait_system::TrendModel + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn trait_system::TrendModel + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn TraitOptimizationAlgorithm + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\trait_system.rs:672:5
    |
670 | #[derive(Debug)]
    |          ----- in this derive macro expansion
671 | struct TraitOptimizationEngine {
672 |     optimization_algorithms: Vec<Box<dyn TraitOptimizationAlgorithm>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn TraitOptimizationAlgorithm + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn TraitOptimizationAlgorithm + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn ObjectiveFunction + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\trait_system.rs:673:5
    |
670 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
673 |     objective_functions: Vec<Box<dyn ObjectiveFunction>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn ObjectiveFunction + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn ObjectiveFunction + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn Constraint + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\trait_system.rs:725:5
    |
723 | #[derive(Debug)]
    |          ----- in this derive macro expansion
724 | struct ConstraintManager {
725 |     hard_constraints: Vec<Box<dyn Constraint>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn Constraint + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn Constraint + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn PerformancePredictionModel + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\trait_system.rs:753:5
    |
751 | #[derive(Debug)]
    |          ----- in this derive macro expansion
752 | struct PerformancePredictor {
753 |     prediction_models: Vec<Box<dyn PerformancePredictionModel>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn PerformancePredictionModel + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn PerformancePredictionModel + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0308]: mismatched types
    --> src\creature_engine\trait_system.rs:1135:35
     |
1135 |                 .resolve_conflict(&conflict)?;
     |                  ---------------- ^^^^^^^^^ expected `&[CreatureTrait]`, found `&TraitConflict`
     |                  |
     |                  arguments to this method are incorrect
     |
     = note: expected reference `&[trait_system::CreatureTrait]`
                found reference `&TraitConflict`
note: method defined here
    --> src\creature_engine\trait_system.rs:1442:8
     |
1442 |     fn resolve_conflict(&self, conflicting_traits: &[CreatureTrait]) -> CreatureEngineResult<ConflictResolution> {
     |        ^^^^^^^^^^^^^^^^        ------------------------------------

error[E0277]: the trait bound `trait_system::OptimizationSuggestion: utils::_::_serde::Serialize` is not satisfied
    --> src\creature_engine\trait_system.rs:1641:24
     |
1641 | #[derive(Debug, Clone, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `utils::_::_serde::Serialize` is not implemented for `trait_system::OptimizationSuggestion`
...
1647 |     pub improvement_suggestions: Vec<OptimizationSuggestion>,
     |     --- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `trait_system::OptimizationSuggestion` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `utils::_::_serde::Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 898 others
     = note: required for `std::vec::Vec<trait_system::OptimizationSuggestion>` to implement `utils::_::_serde::Serialize`
note: required by a bound in `utils::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `PerformancePrediction: utils::_::_serde::Serialize` is not satisfied
    --> src\creature_engine\trait_system.rs:1641:24
     |
1641 | #[derive(Debug, Clone, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `utils::_::_serde::Serialize` is not implemented for `PerformancePrediction`
...
1648 |     pub performance_prediction: PerformancePrediction,
     |     --- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `PerformancePrediction` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `utils::_::_serde::Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 898 others
note: required by a bound in `utils::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `trait_system::OptimizationSuggestion: Deserialize<'_>` is not satisfied
    --> src\creature_engine\trait_system.rs:1647:34
     |
1647 |     pub improvement_suggestions: Vec<OptimizationSuggestion>,
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `trait_system::OptimizationSuggestion`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `trait_system::OptimizationSuggestion` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 937 others
     = note: required for `std::vec::Vec<trait_system::OptimizationSuggestion>` to implement `Deserialize<'_>`
note: required by a bound in `next_element`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `PerformancePrediction: Deserialize<'_>` is not satisfied
    --> src\creature_engine\trait_system.rs:1648:33
     |
1648 |     pub performance_prediction: PerformancePrediction,
     |                                 ^^^^^^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `PerformancePrediction`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `PerformancePrediction` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 937 others
note: required by a bound in `next_element`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `trait_system::OptimizationSuggestion: Deserialize<'_>` is not satisfied
    --> src\creature_engine\trait_system.rs:1647:34
     |
1647 |     pub improvement_suggestions: Vec<OptimizationSuggestion>,
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `trait_system::OptimizationSuggestion`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `trait_system::OptimizationSuggestion` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 937 others
     = note: required for `std::vec::Vec<trait_system::OptimizationSuggestion>` to implement `Deserialize<'_>`
note: required by a bound in `next_value`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `PerformancePrediction: Deserialize<'_>` is not satisfied
    --> src\creature_engine\trait_system.rs:1648:33
     |
1648 |     pub performance_prediction: PerformancePrediction,
     |                                 ^^^^^^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `PerformancePrediction`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `PerformancePrediction` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 937 others
note: required by a bound in `next_value`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `trait_system::OptimizationSuggestion: Deserialize<'_>` is not satisfied
    --> src\creature_engine\trait_system.rs:1641:35
     |
1641 | #[derive(Debug, Clone, Serialize, Deserialize)]
     |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `trait_system::OptimizationSuggestion`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `trait_system::OptimizationSuggestion` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 937 others
     = note: required for `std::vec::Vec<trait_system::OptimizationSuggestion>` to implement `Deserialize<'_>`
note: required by a bound in `utils::_::_serde::__private::de::missing_field`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
     |
23   | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
     |        ------------- required by a bound in this function
24   | where
25   |     V: Deserialize<'de>,
     |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
     = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `PerformancePrediction: Deserialize<'_>` is not satisfied
    --> src\creature_engine\trait_system.rs:1641:35
     |
1641 | #[derive(Debug, Clone, Serialize, Deserialize)]
     |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `PerformancePrediction`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `PerformancePrediction` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 937 others
note: required by a bound in `utils::_::_serde::__private::de::missing_field`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
     |
23   | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
     |        ------------- required by a bound in this function
24   | where
25   |     V: Deserialize<'de>,
     |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
     = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `ConflictType: utils::_::_serde::Serialize` is not satisfied
    --> src\creature_engine\trait_system.rs:1659:24
     |
1659 | #[derive(Debug, Clone, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `utils::_::_serde::Serialize` is not implemented for `ConflictType`
1660 | pub struct ConflictWarning {
1661 |     pub conflict_type: ConflictType,
     |     --- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `ConflictType` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `utils::_::_serde::Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 898 others
note: required by a bound in `utils::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `ConflictType: Deserialize<'_>` is not satisfied
    --> src\creature_engine\trait_system.rs:1661:24
     |
1661 |     pub conflict_type: ConflictType,
     |                        ^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `ConflictType`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `ConflictType` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 937 others
note: required by a bound in `next_element`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `ConflictType: Deserialize<'_>` is not satisfied
    --> src\creature_engine\trait_system.rs:1661:24
     |
1661 |     pub conflict_type: ConflictType,
     |                        ^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `ConflictType`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `ConflictType` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 937 others
note: required by a bound in `next_value`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `ConflictType: Deserialize<'_>` is not satisfied
    --> src\creature_engine\trait_system.rs:1659:35
     |
1659 | #[derive(Debug, Clone, Serialize, Deserialize)]
     |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `ConflictType`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `ConflictType` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 937 others
note: required by a bound in `utils::_::_serde::__private::de::missing_field`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
     |
23   | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
     |        ------------- required by a bound in this function
24   | where
25   |     V: Deserialize<'de>,
     |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
     = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `(dyn MutationGenerator + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\mutation.rs:136:5
    |
134 | #[derive(Debug)]
    |          ----- in this derive macro expansion
135 | struct MutationEngine {
136 |     mutation_generators: HashMap<MutationType, Box<dyn MutationGenerator>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn MutationGenerator + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn MutationGenerator + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn MutationProbabilityCalculator + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\mutation.rs:137:5
    |
134 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
137 |     probability_calculators: Vec<Box<dyn MutationProbabilityCalculator>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn MutationProbabilityCalculator + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn MutationProbabilityCalculator + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn MutationValidator + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\mutation.rs:138:5
    |
134 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
138 |     mutation_validators: Vec<Box<dyn MutationValidator>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn MutationValidator + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn MutationValidator + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn MutationEffectPredictor + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\mutation.rs:139:5
    |
134 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
139 |     effect_predictors: Vec<Box<dyn MutationEffectPredictor>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn MutationEffectPredictor + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn MutationEffectPredictor + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn SurvivalFunction + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\mutation.rs:287:5
    |
283 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
287 |     survival_functions: Vec<Box<dyn SurvivalFunction>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn SurvivalFunction + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn SurvivalFunction + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn CustomValidator + 'static)` doesn't implement `std::fmt::Debug`
  --> src\creature_engine\validator.rs:98:5
   |
88 | #[derive(Debug)]
   |          ----- in this derive macro expansion
...
98 |     custom_validators: HashMap<String, Box<dyn CustomValidator>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn CustomValidator + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
   |
   = help: the trait `std::fmt::Debug` is not implemented for `(dyn CustomValidator + 'static)`
   = help: the following other types implement trait `std::fmt::Debug`:
             dyn bevy::prelude::Reflect
             dyn bevy::prelude::System<In = In, Out = Out>
             dyn std::any::Any + Send + std::marker::Sync
             dyn std::any::Any + Send
             dyn std::any::Any
             dyn tracing::Value
             dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
             dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn ConditionEvaluator + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\validator.rs:114:5
    |
111 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
114 |     condition_evaluator: Box<dyn ConditionEvaluator>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn ConditionEvaluator + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn ConditionEvaluator + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn TextCleaner + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\validator.rs:165:5
    |
162 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
165 |     text_cleaners: Vec<Box<dyn TextCleaner>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn TextCleaner + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn TextCleaner + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn NumericNormalizer + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\validator.rs:166:5
    |
162 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
166 |     numeric_normalizers: Vec<Box<dyn NumericNormalizer>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn NumericNormalizer + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn NumericNormalizer + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn FormatValidator + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\validator.rs:167:5
    |
162 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
167 |     format_validators: HashMap<String, Box<dyn FormatValidator>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn FormatValidator + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn FormatValidator + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn RelationshipValidator + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\validator.rs:218:5
    |
215 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
218 |     relationship_validators: HashMap<String, Box<dyn RelationshipValidator>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn RelationshipValidator + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn RelationshipValidator + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn ResourceMonitor + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\validator.rs:498:5
    |
495 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
498 |     resource_monitors: Vec<Box<dyn ResourceMonitor>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn ResourceMonitor + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn ResourceMonitor + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn BottleneckDetector + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\validator.rs:499:5
    |
495 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
499 |     bottleneck_detectors: Vec<Box<dyn BottleneckDetector>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn BottleneckDetector + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn BottleneckDetector + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn ThreatDetector + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\validator.rs:581:5
    |
578 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
581 |     threat_detectors: Vec<Box<dyn ThreatDetector>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn ThreatDetector + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn ThreatDetector + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn PolicyEvaluator + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\validator.rs:701:5
    |
698 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
701 |     policy_evaluator: Box<dyn PolicyEvaluator>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn PolicyEvaluator + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn PolicyEvaluator + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn PIIDetector + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\validator.rs:753:5
    |
750 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
753 |     pii_detectors: Vec<Box<dyn PIIDetector>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn PIIDetector + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn PIIDetector + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn AnonymizationTechnique + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\validator.rs:804:5
    |
802 | #[derive(Debug)]
    |          ----- in this derive macro expansion
803 | struct AnonymizationEngine {
804 |     anonymization_techniques: HashMap<String, Box<dyn AnonymizationTechnique>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn AnonymizationTechnique + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn AnonymizationTechnique + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn UtilityPreserver + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\validator.rs:805:5
    |
802 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
805 |     utility_preservers: Vec<Box<dyn UtilityPreserver>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn UtilityPreserver + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn UtilityPreserver + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn PrivacyMetric + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\validator.rs:806:5
    |
802 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
806 |     privacy_metrics: Vec<Box<dyn PrivacyMetric>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn PrivacyMetric + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn PrivacyMetric + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn LogAnalyzer + 'static)` doesn't implement `std::fmt::Debug`
   --> src\creature_engine\validator.rs:883:5
    |
879 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
883 |     log_analyzers: Vec<Box<dyn LogAnalyzer>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn LogAnalyzer + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn LogAnalyzer + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn validator::TrendModel + 'static)` doesn't implement `std::fmt::Debug`
    --> src\creature_engine\validator.rs:1079:5
     |
1076 | #[derive(Debug)]
     |          ----- in this derive macro expansion
...
1079 |     trend_models: Vec<Box<dyn TrendModel>>,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn validator::TrendModel + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
     |
     = help: the trait `std::fmt::Debug` is not implemented for `(dyn validator::TrendModel + 'static)`
     = help: the following other types implement trait `std::fmt::Debug`:
               dyn bevy::prelude::Reflect
               dyn bevy::prelude::System<In = In, Out = Out>
               dyn std::any::Any + Send + std::marker::Sync
               dyn std::any::Any + Send
               dyn std::any::Any
               dyn tracing::Value
               dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
               dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: `(dyn validator::AnomalyDetector + 'static)` doesn't implement `std::fmt::Debug`
    --> src\creature_engine\validator.rs:1080:5
     |
1076 | #[derive(Debug)]
     |          ----- in this derive macro expansion
...
1080 |     anomaly_detectors: Vec<Box<dyn AnomalyDetector>>,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn validator::AnomalyDetector + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
     |
     = help: the trait `std::fmt::Debug` is not implemented for `(dyn validator::AnomalyDetector + 'static)`
     = help: the following other types implement trait `std::fmt::Debug`:
               dyn bevy::prelude::Reflect
               dyn bevy::prelude::System<In = In, Out = Out>
               dyn std::any::Any + Send + std::marker::Sync
               dyn std::any::Any + Send
               dyn std::any::Any
               dyn tracing::Value
               dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
               dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0277]: the trait bound `SecurityThreat: utils::_::_serde::Serialize` is not satisfied
    --> src\creature_engine\validator.rs:1206:24
     |
1206 | #[derive(Debug, Clone, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `utils::_::_serde::Serialize` is not implemented for `SecurityThreat`
...
1209 |     pub threats_detected: Vec<SecurityThreat>,
     |     --- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `SecurityThreat` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `utils::_::_serde::Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 895 others
     = note: required for `std::vec::Vec<SecurityThreat>` to implement `utils::_::_serde::Serialize`
note: required by a bound in `utils::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `SecurityThreat: Deserialize<'_>` is not satisfied
    --> src\creature_engine\validator.rs:1209:27
     |
1209 |     pub threats_detected: Vec<SecurityThreat>,
     |                           ^^^^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `SecurityThreat`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `SecurityThreat` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 916 others
     = note: required for `std::vec::Vec<SecurityThreat>` to implement `Deserialize<'_>`
note: required by a bound in `next_element`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `SecurityThreat: Deserialize<'_>` is not satisfied
    --> src\creature_engine\validator.rs:1209:27
     |
1209 |     pub threats_detected: Vec<SecurityThreat>,
     |                           ^^^^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `SecurityThreat`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `SecurityThreat` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 916 others
     = note: required for `std::vec::Vec<SecurityThreat>` to implement `Deserialize<'_>`
note: required by a bound in `next_value`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `SecurityThreat: Deserialize<'_>` is not satisfied
    --> src\creature_engine\validator.rs:1206:35
     |
1206 | #[derive(Debug, Clone, Serialize, Deserialize)]
     |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `SecurityThreat`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `SecurityThreat` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 916 others
     = note: required for `std::vec::Vec<SecurityThreat>` to implement `Deserialize<'_>`
note: required by a bound in `utils::_::_serde::__private::de::missing_field`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
     |
23   | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
     |        ------------- required by a bound in this function
24   | where
25   |     V: Deserialize<'de>,
     |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
     = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `SecuritySeverity: utils::_::_serde::Serialize` is not satisfied
    --> src\creature_engine\validator.rs:1215:24
     |
1215 | #[derive(Debug, Clone, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `utils::_::_serde::Serialize` is not implemented for `SecuritySeverity`
...
1219 |     pub severity: SecuritySeverity,
     |     --- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `SecuritySeverity` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `utils::_::_serde::Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 895 others
note: required by a bound in `utils::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `SecuritySeverity: Deserialize<'_>` is not satisfied
    --> src\creature_engine\validator.rs:1219:19
     |
1219 |     pub severity: SecuritySeverity,
     |                   ^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `SecuritySeverity`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `SecuritySeverity` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 916 others
note: required by a bound in `next_element`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `SecuritySeverity: Deserialize<'_>` is not satisfied
    --> src\creature_engine\validator.rs:1219:19
     |
1219 |     pub severity: SecuritySeverity,
     |                   ^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `SecuritySeverity`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `SecuritySeverity` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 916 others
note: required by a bound in `next_value`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `SecuritySeverity: Deserialize<'_>` is not satisfied
    --> src\creature_engine\validator.rs:1215:35
     |
1215 | #[derive(Debug, Clone, Serialize, Deserialize)]
     |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `SecuritySeverity`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `SecuritySeverity` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 916 others
note: required by a bound in `utils::_::_serde::__private::de::missing_field`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
     |
23   | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
     |        ------------- required by a bound in this function
24   | where
25   |     V: Deserialize<'de>,
     |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
     = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `templates::TemplateManager: Clone` is not satisfied
  --> src\creature_engine\mod.rs:89:5
   |
85 | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
89 |     templates: TemplateManager,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `templates::TemplateManager`

error[E0277]: the trait bound `evolution_tree::EvolutionTree: Clone` is not satisfied
  --> src\creature_engine\mod.rs:90:5
   |
85 | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
90 |     evolution_tree: EvolutionTree,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `evolution_tree::EvolutionTree`
   |
help: consider annotating `evolution_tree::EvolutionTree` with `#[derive(Clone)]`
  --> src\creature_engine\evolution_tree.rs:100:1
   |
100+ #[derive(Clone)]
101| pub struct EvolutionTree {
   |

error[E0277]: the trait bound `balance_system::BalanceSystem: Clone` is not satisfied
  --> src\creature_engine\mod.rs:91:5
   |
85 | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
91 |     balance_system: BalanceSystem,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `balance_system::BalanceSystem`

error[E0277]: the trait bound `rarity_system::RaritySystem: Clone` is not satisfied
  --> src\creature_engine\mod.rs:92:5
   |
85 | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
92 |     rarity_system: RaritySystem,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `rarity_system::RaritySystem`

error[E0277]: the trait bound `trait_system::TraitSystem: Clone` is not satisfied
  --> src\creature_engine\mod.rs:93:5
   |
85 | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
93 |     trait_system: TraitSystem,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `trait_system::TraitSystem`

error[E0277]: the trait bound `mutation::MutationSystem: Clone` is not satisfied
  --> src\creature_engine\mod.rs:94:5
   |
85 | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
94 |     mutation_system: MutationSystem,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `mutation::MutationSystem`

error[E0277]: the trait bound `validator::CreatureValidator: Clone` is not satisfied
  --> src\creature_engine\mod.rs:95:5
   |
85 | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
95 |     validator: CreatureValidator,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `validator::CreatureValidator`

error[E0277]: cannot add-assign `Duration` to `u64`
   --> src\save.rs:373:40
    |
373 |             save.player.stats.playtime += delta;
    |                                        ^^ no implementation for `u64 += Duration`
    |
    = help: the trait `AddAssign<Duration>` is not implemented for `u64`
    = help: the following other types implement trait `AddAssign<Rhs>`:
              `u64` implements `AddAssign<&u64>`
              `u64` implements `AddAssign<zerocopy::byteorder::U64<O>>`
              `u64` implements `AddAssign`

error[E0609]: no field `party` on type `PokemonTeam`
   --> src\save.rs:437:37
    |
437 |         if save.player.pokemon_team.party.is_empty() {
    |                                     ^^^^^ unknown field
    |
    = note: available fields are: `active_team`, `storage`, `next_pokemon_id`

error[E0599]: no function or associated item named `new` found for struct `SpriteManager` in the current scope
   --> src\world\map.rs:553:44
    |
21  | pub struct SpriteManager;
    | ------------------------ function or associated item `new` not found for this struct
...
553 |             sprite_manager: SpriteManager::new(),
    |                                            ^^^ function or associated item not found in `SpriteManager`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `BinnedPhaseItem`
            candidate #2: `Nullable`
            candidate #3: `UniformSampler`
            candidate #4: `Watcher`
            candidate #5: `ahash::HashMapExt`
            candidate #6: `ahash::HashSetExt`
            candidate #7: `aligned_vec::Alignment`
            candidate #8: `itertools::adaptors::coalesce::CountItem`
            candidate #9: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #10: `petgraph::adj::IndexType`
            candidate #11: `symphonia_core::meta::MetadataReader`
            candidate #12: `typenum::marker_traits::Bit`

error[E0599]: no method named `clear` found for mutable reference `&mut world::map::Renderer2D` in the current scope
   --> src\world\map.rs:647:22
    |
647 |             renderer.clear(map.background_color)?;
    |                      ^^^^^ method not found in `&mut Renderer2D`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `clear`, perhaps you need to implement one of them:
            candidate #1: `bitflags::traits::Flags`
            candidate #2: `glow::HasContext`
            candidate #3: `sharded_slab::clear::Clear`
            candidate #4: `symphonia_core::audio::Signal`
            candidate #5: `toml_edit::table::TableLike`

error[E0599]: no method named `update` found for struct `SpriteManager` in the current scope
   --> src\world\map.rs:671:29
    |
21  | pub struct SpriteManager;
    | ------------------------ method `update` not found for this struct
...
671 |         self.sprite_manager.update(delta_time)?;
    |                             ^^^^^^ method not found in `SpriteManager`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `update`, perhaps you need to implement one of them:
            candidate #1: `StateHandler`
            candidate #2: `ecs::System`
            candidate #3: `CameraProjection`
            candidate #4: `ViewNode`
            candidate #5: `bevy::bevy_render::render_graph::Node`
            candidate #6: `itertools::Itertools`
            candidate #7: `rayon::iter::ParallelIterator`

error[E0599]: no method named `draw_quad` found for mutable reference `&mut world::map::Renderer2D` in the current scope
   --> src\world\map.rs:789:18
    |
789 |         renderer.draw_quad(
    |         ---------^^^^^^^^^ method not found in `&mut Renderer2D`

error[E0599]: no method named `draw_sprite` found for mutable reference `&mut world::map::Renderer2D` in the current scope
   --> src\world\map.rs:814:26
    |
814 |                 renderer.draw_sprite(
    |                 ---------^^^^^^^^^^^ method not found in `&mut Renderer2D`

error[E0599]: no method named `draw_quad` found for mutable reference `&mut world::map::Renderer2D` in the current scope
   --> src\world\map.rs:826:26
    |
826 |                 renderer.draw_quad(
    |                 ---------^^^^^^^^^ method not found in `&mut Renderer2D`

error[E0277]: `EventManager` doesn't implement `std::fmt::Debug`
  --> src\world\mod.rs:40:5
   |
22 | #[derive(Debug, Clone, Serialize, Deserialize)]
   |          ----- in this derive macro expansion
...
40 |     pub events: events::EventManager,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `EventManager` cannot be formatted using `{:?}`
   |
   = help: the trait `std::fmt::Debug` is not implemented for `EventManager`
   = note: add `#[derive(Debug)]` to `EventManager` or manually `impl std::fmt::Debug for EventManager`

error[E0277]: the trait bound `EventManager: Clone` is not satisfied
  --> src\world\mod.rs:40:5
   |
22 | #[derive(Debug, Clone, Serialize, Deserialize)]
   |                 ----- in this derive macro expansion
...
40 |     pub events: events::EventManager,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `EventManager`

error[E0277]: the trait bound `EventManager: utils::_::_serde::Serialize` is not satisfied
    --> src\world\mod.rs:22:24
     |
22   | #[derive(Debug, Clone, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `utils::_::_serde::Serialize` is not implemented for `EventManager`
...
40   |     pub events: events::EventManager,
     |     --- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `EventManager` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `utils::_::_serde::Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 895 others
note: required by a bound in `utils::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `EventManager: Deserialize<'_>` is not satisfied
    --> src\world\mod.rs:40:17
     |
40   |     pub events: events::EventManager,
     |                 ^^^^^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `EventManager`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `EventManager` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 909 others
note: required by a bound in `next_element`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `EventManager: Deserialize<'_>` is not satisfied
    --> src\world\mod.rs:40:17
     |
40   |     pub events: events::EventManager,
     |                 ^^^^^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `EventManager`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `EventManager` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a serde_json::value::RawValue
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
             and 909 others
note: required by a bound in `next_value`
    --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `EventManager: Deserialize<'_>` is not satisfied
  --> src\world\mod.rs:22:35
   |
22 | #[derive(Debug, Clone, Serialize, Deserialize)]
   |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `EventManager`
   |
   = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `EventManager` type
   = note: for types from other crates check whether the crate offers a `serde` feature flag
   = help: the following other types implement trait `Deserialize<'de>`:
             &'a [u8]
             &'a serde_json::value::RawValue
             &'a std::path::Path
             &'a str
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
           and 909 others
note: required by a bound in `utils::_::_serde::__private::de::missing_field`
  --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
   |
23 | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
   |        ------------- required by a bound in this function
24 | where
25 |     V: Deserialize<'de>,
   |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this function takes 0 arguments but 1 argument was supplied
  --> src\states\menu.rs:52:25
   |
52 |             ui_manager: UIManager::new(Vec2::new(800.0, 600.0)),
   |                         ^^^^^^^^^^^^^^ ----------------------- unexpected argument of type `glam::Vec2`
   |
note: associated function defined here
  --> src\ui\mod.rs:47:12
   |
47 |     pub fn new() -> Self {
   |            ^^^
help: remove the extra argument
   |
52 -             ui_manager: UIManager::new(Vec2::new(800.0, 600.0)),
52 +             ui_manager: UIManager::new(),
   |

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
  --> src\states\menu.rs:73:52
   |
73 |         self.title_label_id = Some(self.ui_manager.create_element(
   |                                    ----------------^^^^^^^^^^^^^^
   |
  ::: src\ui\mod.rs:41:1
   |
41 | pub struct UIManager {
   | -------------------- method `create_element` not found for this struct
   |
help: there is a method `remove_element` with a similar name, but with different arguments
  --> src\ui\mod.rs:58:5
   |
58 |     pub fn remove_element(&mut self, id: &str) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Label` found for enum `ElementType` in the current scope
  --> src\states\menu.rs:75:26
   |
75 |             ElementType::Label,
   |                          ^^^^^ variant or associated item not found in `ElementType`
   |
  ::: src\ui\mod.rs:21:1
   |
21 | pub enum ElementType {
   | -------------------- variant or associated item `Label` not found for this enum

error[E0599]: no method named `set_element_text` found for struct `UIManager` in the current scope
  --> src\states\menu.rs:80:29
   |
80 |             self.ui_manager.set_element_text(title_id, "Pokemon GO".to_string())?;
   |                             ^^^^^^^^^^^^^^^^ method not found in `UIManager`
   |
  ::: src\ui\mod.rs:41:1
   |
41 | pub struct UIManager {
   | -------------------- method `set_element_text` not found for this struct

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
  --> src\states\menu.rs:81:29
   |
81 |             self.ui_manager.set_element_position(title_id, Vec2::new(400.0, 150.0))?;
   |                             ^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
   |
  ::: src\ui\mod.rs:41:1
   |
41 | pub struct UIManager {
   | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
  --> src\states\menu.rs:82:29
   |
82 |             self.ui_manager.set_element_size(title_id, Vec2::new(400.0, 80.0))?;
   |                             ^^^^^^^^^^^^^^^^
   |
  ::: src\ui\mod.rs:41:1
   |
41 | pub struct UIManager {
   | -------------------- method `set_element_size` not found for this struct
   |
help: there is a method `get_events` with a similar name, but with different arguments
  --> src\ui\mod.rs:76:5
   |
76 |     pub fn get_events(&mut self) -> Vec<UIEvent> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
  --> src\states\menu.rs:98:45
   |
98 |             let button_id = self.ui_manager.create_element(
   |                             ----------------^^^^^^^^^^^^^^
   |
  ::: src\ui\mod.rs:41:1
   |
41 | pub struct UIManager {
   | -------------------- method `create_element` not found for this struct
   |
help: there is a method `remove_element` with a similar name, but with different arguments
  --> src\ui\mod.rs:58:5
   |
58 |     pub fn remove_element(&mut self, id: &str) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `set_element_text` found for struct `UIManager` in the current scope
   --> src\states\menu.rs:104:29
    |
104 |             self.ui_manager.set_element_text(button_id, text.to_string())?;
    |                             ^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_text` not found for this struct

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\menu.rs:105:29
    |
105 |             self.ui_manager.set_element_position(
    |             ----------------^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\menu.rs:109:29
    |
109 |             self.ui_manager.set_element_size(button_id, Vec2::new(200.0, 45.0))?;
    |                             ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `add_event_handler` found for struct `UIManager` in the current scope
   --> src\states\menu.rs:115:29
    |
115 |             self.ui_manager.add_event_handler(
    |             ----------------^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `add_event_handler` not found for this struct

error[E0599]: no method named `set_focus` found for struct `UIManager` in the current scope
   --> src\states\menu.rs:206:33
    |
206 |                 self.ui_manager.set_focus(Some(*new_button_id)).ok();
    |                                 ^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_focus` not found for this struct

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> src\states\menu.rs:285:25
    |
285 |         self.ui_manager.render(renderer)?;
    |                         ^^^^^^ -------- unexpected argument of type `&mut states::Renderer2D`
    |
note: method defined here
   --> src\ui\mod.rs:67:12
    |
67  |     pub fn render(&self) -> Result<(), GameError> {
    |            ^^^^^^
help: remove the extra argument
    |
285 -         self.ui_manager.render(renderer)?;
285 +         self.ui_manager.render()?;
    |

error[E0599]: no method named `handle_mouse_event` found for struct `UIManager` in the current scope
   --> src\states\menu.rs:316:29
    |
316 |             self.ui_manager.handle_mouse_event(
    |             ----------------^^^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `handle_mouse_event` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `StateHandler` defines an item `handle_mouse_event`, perhaps you need to implement it
   --> src\states\mod.rs:173:1
    |
173 | pub trait StateHandler: Send {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is a method `handle_event` with a similar name, but with different arguments
   --> src\ui\mod.rs:72:5
    |
72  |     pub fn handle_event(&mut self, event: UIEvent) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0223]: ambiguous associated type
   --> src\states\menu.rs:365:13
    |
365 |             GamepadEvent::ButtonPressed { button, .. } => {
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `ButtonPressed` implemented for `input::gamepad::GamepadEvent`, you could use the fully-qualified path
    |
365 -             GamepadEvent::ButtonPressed { button, .. } => {
365 +             <input::gamepad::GamepadEvent as Example>::ButtonPressed { button, .. } => {
    |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
   --> src\states\battle.rs:221:25
    |
221 |             ui_manager: UIManager::new(Vec2::new(800.0, 600.0)),
    |                         ^^^^^^^^^^^^^^ ----------------------- unexpected argument of type `glam::Vec2`
    |
note: associated function defined here
   --> src\ui\mod.rs:47:12
    |
47  |     pub fn new() -> Self {
    |            ^^^
help: remove the extra argument
    |
221 -             ui_manager: UIManager::new(Vec2::new(800.0, 600.0)),
221 +             ui_manager: UIManager::new(),
    |

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
   --> src\states\battle.rs:287:51
    |
287 |         self.player_hp_bar = Some(self.ui_manager.create_element(
    |                                   ----------------^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `create_element` not found for this struct
    |
help: there is a method `remove_element` with a similar name, but with different arguments
   --> src\ui\mod.rs:58:5
    |
58  |     pub fn remove_element(&mut self, id: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `ProgressBar` found for enum `ElementType` in the current scope
   --> src\states\battle.rs:289:26
    |
289 |             ElementType::ProgressBar,
    |                          ^^^^^^^^^^^ variant or associated item not found in `ElementType`
    |
   ::: src\ui\mod.rs:21:1
    |
21  | pub enum ElementType {
    | -------------------- variant or associated item `ProgressBar` not found for this enum

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\battle.rs:294:29
    |
294 |             self.ui_manager.set_element_position(hp_id, Vec2::new(50.0, 450.0))?;
    |                             ^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\battle.rs:295:29
    |
295 |             self.ui_manager.set_element_size(hp_id, Vec2::new(200.0, 20.0))?;
    |                             ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
   --> src\states\battle.rs:299:50
    |
299 |         self.enemy_hp_bar = Some(self.ui_manager.create_element(
    |                                  ----------------^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `create_element` not found for this struct
    |
help: there is a method `remove_element` with a similar name, but with different arguments
   --> src\ui\mod.rs:58:5
    |
58  |     pub fn remove_element(&mut self, id: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `ProgressBar` found for enum `ElementType` in the current scope
   --> src\states\battle.rs:301:26
    |
301 |             ElementType::ProgressBar,
    |                          ^^^^^^^^^^^ variant or associated item not found in `ElementType`
    |
   ::: src\ui\mod.rs:21:1
    |
21  | pub enum ElementType {
    | -------------------- variant or associated item `ProgressBar` not found for this enum

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\battle.rs:306:29
    |
306 |             self.ui_manager.set_element_position(hp_id, Vec2::new(550.0, 150.0))?;
    |                             ^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\battle.rs:307:29
    |
307 |             self.ui_manager.set_element_size(hp_id, Vec2::new(200.0, 20.0))?;
    |                             ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
   --> src\states\battle.rs:311:49
    |
311 |         self.battle_menu = Some(self.ui_manager.create_element(
    |                                 ----------------^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `create_element` not found for this struct
    |
help: there is a method `remove_element` with a similar name, but with different arguments
   --> src\ui\mod.rs:58:5
    |
58  |     pub fn remove_element(&mut self, id: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\battle.rs:318:29
    |
318 |             self.ui_manager.set_element_position(menu_id, Vec2::new(50.0, 500.0))?;
    |                             ^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\battle.rs:319:29
    |
319 |             self.ui_manager.set_element_size(menu_id, Vec2::new(700.0, 80.0))?;
    |                             ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
   --> src\states\battle.rs:335:49
    |
335 |                 let button_id = self.ui_manager.create_element(
    |                                 ----------------^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `create_element` not found for this struct
    |
help: there is a method `remove_element` with a similar name, but with different arguments
   --> src\ui\mod.rs:58:5
    |
58  |     pub fn remove_element(&mut self, id: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\battle.rs:344:33
    |
344 |                 self.ui_manager.set_element_position(button_id, Vec2::new(x, y))?;
    |                                 ^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\battle.rs:345:33
    |
345 |                 self.ui_manager.set_element_size(button_id, Vec2::new(170.0, 25.0))?;
    |                                 ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `set_element_text` found for struct `UIManager` in the current scope
   --> src\states\battle.rs:346:33
    |
346 |                 self.ui_manager.set_element_text(button_id, format!("鎷涘紡 {}", move_id))?;
    |                                 ^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_text` not found for this struct

error[E0599]: no method named `set_element_value` found for struct `UIManager` in the current scope
   --> src\states\battle.rs:623:29
    |
623 |             self.ui_manager.set_element_value(hp_id, format!("{:.0}%", hp_percentage * 100.0))?;
    |                             ^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_value` not found for this struct

error[E0599]: no method named `set_element_value` found for struct `UIManager` in the current scope
   --> src\states\battle.rs:629:29
    |
629 |             self.ui_manager.set_element_value(hp_id, format!("{:.0}%", hp_percentage * 100.0))?;
    |                             ^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_value` not found for this struct

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> src\states\battle.rs:746:25
    |
746 |         self.ui_manager.render(renderer)?;
    |                         ^^^^^^ -------- unexpected argument of type `&mut states::Renderer2D`
    |
note: method defined here
   --> src\ui\mod.rs:67:12
    |
67  |     pub fn render(&self) -> Result<(), GameError> {
    |            ^^^^^^
help: remove the extra argument
    |
746 -         self.ui_manager.render(renderer)?;
746 +         self.ui_manager.render()?;
    |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
  --> src\states\overworld.rs:48:25
   |
48 |             ui_manager: UIManager::new(Vec2::new(800.0, 600.0)),
   |                         ^^^^^^^^^^^^^^ ----------------------- unexpected argument of type `glam::Vec2`
   |
note: associated function defined here
  --> src\ui\mod.rs:47:12
   |
47 |     pub fn new() -> Self {
   |            ^^^
help: remove the extra argument
   |
48 -             ui_manager: UIManager::new(Vec2::new(800.0, 600.0)),
48 +             ui_manager: UIManager::new(),
   |

error[E0599]: no method named `draw_quad` found for mutable reference `&mut states::Renderer2D` in the current scope
   --> src\states\overworld.rs:140:18
    |
140 |         renderer.draw_quad(
    |         ---------^^^^^^^^^ method not found in `&mut Renderer2D`

error[E0599]: no method named `draw_quad` found for mutable reference `&mut states::Renderer2D` in the current scope
   --> src\states\overworld.rs:149:18
    |
149 |         renderer.draw_quad(
    |         ---------^^^^^^^^^ method not found in `&mut Renderer2D`

error[E0061]: this function takes 0 arguments but 1 argument was supplied
  --> src\states\settings.rs:63:25
   |
63 |             ui_manager: UIManager::new(Vec2::new(800.0, 600.0)),
   |                         ^^^^^^^^^^^^^^ ----------------------- unexpected argument of type `glam::Vec2`
   |
note: associated function defined here
  --> src\ui\mod.rs:47:12
   |
47 |     pub fn new() -> Self {
   |            ^^^
help: remove the extra argument
   |
63 -             ui_manager: UIManager::new(Vec2::new(800.0, 600.0)),
63 +             ui_manager: UIManager::new(),
   |

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:115:45
    |
115 |             let button_id = self.ui_manager.create_element(
    |                             ----------------^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `create_element` not found for this struct
    |
help: there is a method `remove_element` with a similar name, but with different arguments
   --> src\ui\mod.rs:58:5
    |
58  |     pub fn remove_element(&mut self, id: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `set_element_text` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:121:29
    |
121 |             self.ui_manager.set_element_text(button_id, name.to_string())?;
    |                             ^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_text` not found for this struct

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:122:29
    |
122 |             self.ui_manager.set_element_position(
    |             ----------------^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:126:29
    |
126 |             self.ui_manager.set_element_size(button_id, Vec2::new(100.0, 30.0))?;
    |                             ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:135:43
    |
135 |         let save_button = self.ui_manager.create_element(
    |                           ----------------^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `create_element` not found for this struct
    |
help: there is a method `remove_element` with a similar name, but with different arguments
   --> src\ui\mod.rs:58:5
    |
58  |     pub fn remove_element(&mut self, id: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `set_element_text` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:140:25
    |
140 |         self.ui_manager.set_element_text(save_button, "淇濆瓨".to_string())?;
    |                         ^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_text` not found for this struct

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:141:25
    |
141 |         self.ui_manager.set_element_position(save_button, Vec2::new(600.0, 550.0))?;
    |                         ^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:142:25
    |
142 |         self.ui_manager.set_element_size(save_button, Vec2::new(80.0, 30.0))?;
    |                         ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:144:45
    |
144 |         let cancel_button = self.ui_manager.create_element(
    |                             ----------------^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `create_element` not found for this struct
    |
help: there is a method `remove_element` with a similar name, but with different arguments
   --> src\ui\mod.rs:58:5
    |
58  |     pub fn remove_element(&mut self, id: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `set_element_text` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:149:25
    |
149 |         self.ui_manager.set_element_text(cancel_button, "鍙栨秷".to_string())?;
    |                         ^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_text` not found for this struct

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:150:25
    |
150 |         self.ui_manager.set_element_position(cancel_button, Vec2::new(700.0, 550.0))?;
    |                         ^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:151:25
    |
151 |         self.ui_manager.set_element_size(cancel_button, Vec2::new(80.0, 30.0))?;
    |                         ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `destroy_element` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:160:29
    |
160 |             self.ui_manager.destroy_element(element_id)?;
    |                             ^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `destroy_element` not found for this struct
    |
help: there is a method `add_element` with a similar name
    |
160 -             self.ui_manager.destroy_element(element_id)?;
160 +             self.ui_manager.add_element(element_id)?;
    |

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:194:44
    |
194 |             let label_id = self.ui_manager.create_element(
    |                            ----------------^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `create_element` not found for this struct
    |
help: there is a method `remove_element` with a similar name, but with different arguments
   --> src\ui\mod.rs:58:5
    |
58  |     pub fn remove_element(&mut self, id: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Label` found for enum `ElementType` in the current scope
   --> src\states\settings.rs:196:30
    |
196 |                 ElementType::Label,
    |                              ^^^^^ variant or associated item not found in `ElementType`
    |
   ::: src\ui\mod.rs:21:1
    |
21  | pub enum ElementType {
    | -------------------- variant or associated item `Label` not found for this enum

error[E0599]: no method named `set_element_text` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:199:29
    |
199 |             self.ui_manager.set_element_text(label_id, display_name.to_string())?;
    |                             ^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_text` not found for this struct

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:200:29
    |
200 |             self.ui_manager.set_element_position(
    |             ----------------^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:204:29
    |
204 |             self.ui_manager.set_element_size(label_id, Vec2::new(150.0, 25.0))?;
    |                             ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:211:57
    |
211 |                         let toggle_id = self.ui_manager.create_element(
    |                                         ----------------^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `create_element` not found for this struct
    |
help: there is a method `remove_element` with a similar name, but with different arguments
   --> src\ui\mod.rs:58:5
    |
58  |     pub fn remove_element(&mut self, id: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Toggle` found for enum `ElementType` in the current scope
   --> src\states\settings.rs:213:42
    |
213 | ...                   ElementType::Toggle,
    |                                    ^^^^^^ variant or associated item not found in `ElementType`
    |
   ::: src\ui\mod.rs:21:1
    |
21  | pub enum ElementType {
    | -------------------- variant or associated item `Toggle` not found for this enum
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `Toggle`, perhaps you need to implement one of them:
            candidate #1: `windows::Win32::UI::Accessibility::IToggleProvider_Impl`
            candidate #2: `windows::Win32::UI::Accessibility::IUIAutomationTogglePattern_Impl`

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:216:41
    |
216 |                         self.ui_manager.set_element_position(
    |                         ----------------^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:220:41
    |
220 |                         self.ui_manager.set_element_size(toggle_id, Vec2::new(50.0, 25.0))?;
    |                                         ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:224:57
    |
224 |                         let slider_id = self.ui_manager.create_element(
    |                                         ----------------^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `create_element` not found for this struct
    |
help: there is a method `remove_element` with a similar name, but with different arguments
   --> src\ui\mod.rs:58:5
    |
58  |     pub fn remove_element(&mut self, id: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:229:41
    |
229 |                         self.ui_manager.set_element_position(
    |                         ----------------^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:233:41
    |
233 |                         self.ui_manager.set_element_size(slider_id, Vec2::new(200.0, 25.0))?;
    |                                         ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `set_element_value` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:234:41
    |
234 |                         self.ui_manager.set_element_value(
    |                         ----------------^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_value` not found for this struct

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:241:59
    |
241 |                         let dropdown_id = self.ui_manager.create_element(
    |                                           ----------------^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `create_element` not found for this struct
    |
help: there is a method `remove_element` with a similar name, but with different arguments
   --> src\ui\mod.rs:58:5
    |
58  |     pub fn remove_element(&mut self, id: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Dropdown` found for enum `ElementType` in the current scope
   --> src\states\settings.rs:243:42
    |
243 | ...                   ElementType::Dropdown,
    |                                    ^^^^^^^^ variant or associated item not found in `ElementType`
    |
   ::: src\ui\mod.rs:21:1
    |
21  | pub enum ElementType {
    | -------------------- variant or associated item `Dropdown` not found for this enum

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:246:41
    |
246 |                         self.ui_manager.set_element_position(
    |                         ----------------^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\settings.rs:250:41
    |
250 |                         self.ui_manager.set_element_size(dropdown_id, Vec2::new(150.0, 25.0))?;
    |                                         ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> src\states\settings.rs:355:18
    |
355 |         renderer.clear(Vec4::new(0.1, 0.1, 0.15, 1.0))?;
    |                  ^^^^^ ------------------------------ unexpected argument of type `Vec4`
    |
note: method defined here
   --> src\states\mod.rs:53:12
    |
53  |     pub fn clear(&mut self) {
    |            ^^^^^
help: remove the extra argument
    |
355 -         renderer.clear(Vec4::new(0.1, 0.1, 0.15, 1.0))?;
355 +         renderer.clear()?;
    |

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src\states\settings.rs:355:9
    |
355 |         renderer.clear(Vec4::new(0.1, 0.1, 0.15, 1.0))?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `()`
    |
    = help: the trait `Try` is not implemented for `()`

error[E0061]: this method takes 4 arguments but 5 arguments were supplied
   --> src\states\settings.rs:358:18
    |
358 |         renderer.draw_text(
    |                  ^^^^^^^^^
359 |             "娓告垙璁剧疆",
    |             ---------- expected `String`, found `&str`
...
362 |             Vec4::new(1.0, 1.0, 1.0, 1.0),
    |             ----------------------------- expected `[f32; 4]`, found `Vec4`
363 |             1,
    |             - unexpected argument #5 of type `{integer}`
    |
note: method defined here
   --> src\states\mod.rs:82:12
    |
82  |     pub fn draw_text(&mut self, text: String, position: glam::Vec2, size: f32, color: [f32; 4]) {
    |            ^^^^^^^^^            ------------                                   ---------------
help: try using a conversion method
    |
359 |             "娓告垙璁剧疆".to_string(),
    |                       ++++++++++++
help: call `Into::into` on this expression to convert `Vec4` into `[f32; 4]`
    |
362 |             Vec4::new(1.0, 1.0, 1.0, 1.0).into(),
    |                                          +++++++
help: remove the extra argument
    |
359 ~             /* std::string::String */,
360 |             Vec2::new(350.0, 20.0),
361 |             24.0,
362 ~             /* [f32; 4] */,
    |

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src\states\settings.rs:358:9
    |
358 | /         renderer.draw_text(
359 | |             "娓告垙璁剧疆",
360 | |             Vec2::new(350.0, 20.0),
361 | |             24.0,
362 | |             Vec4::new(1.0, 1.0, 1.0, 1.0),
363 | |             1,
364 | |         )?;
    | |__________^ the `?` operator cannot be applied to type `()`
    |
    = help: the trait `Try` is not implemented for `()`

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> src\states\settings.rs:367:25
    |
367 |         self.ui_manager.render(renderer)?;
    |                         ^^^^^^ -------- unexpected argument of type `&mut states::Renderer2D`
    |
note: method defined here
   --> src\ui\mod.rs:67:12
    |
67  |     pub fn render(&self) -> Result<(), GameError> {
    |            ^^^^^^
help: remove the extra argument
    |
367 -         self.ui_manager.render(renderer)?;
367 +         self.ui_manager.render()?;
    |

error[E0061]: this method takes 4 arguments but 5 arguments were supplied
   --> src\states\settings.rs:371:22
    |
371 |             renderer.draw_text(
    |                      ^^^^^^^^^
372 |                 "* 鏈夋湭淇濆瓨鐨勬洿鏀?,
    |                 ------------------ expected `String`, found `&str`
...
375 |                 Vec4::new(1.0, 0.7, 0.0, 1.0),
    |                 ----------------------------- expected `[f32; 4]`, found `Vec4`
376 |                 1,
    |                 - unexpected argument #5 of type `{integer}`
    |
note: method defined here
   --> src\states\mod.rs:82:12
    |
82  |     pub fn draw_text(&mut self, text: String, position: glam::Vec2, size: f32, color: [f32; 4]) {
    |            ^^^^^^^^^            ------------                                   ---------------
help: try using a conversion method
    |
372 |                 "* 鏈夋湭淇濆瓨鐨勬洿鏀?.to_string(),
    |                                   ++++++++++++
help: call `Into::into` on this expression to convert `Vec4` into `[f32; 4]`
    |
375 |                 Vec4::new(1.0, 0.7, 0.0, 1.0).into(),
    |                                              +++++++
help: remove the extra argument
    |
372 ~                 /* std::string::String */,
373 |                 Vec2::new(50.0, 550.0),
374 |                 14.0,
375 ~                 /* [f32; 4] */,
    |

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src\states\settings.rs:371:13
    |
371 | /             renderer.draw_text(
372 | |                 "* 鏈夋湭淇濆瓨鐨勬洿鏀?,
373 | |                 Vec2::new(50.0, 550.0),
374 | |                 14.0,
375 | |                 Vec4::new(1.0, 0.7, 0.0, 1.0),
376 | |                 1,
377 | |             )?;
    | |______________^ the `?` operator cannot be applied to type `()`
    |
    = help: the trait `Try` is not implemented for `()`

error[E0061]: this function takes 0 arguments but 1 argument was supplied
  --> src\states\loading.rs:69:25
   |
69 |             ui_manager: UIManager::new(Vec2::new(800.0, 600.0)),
   |                         ^^^^^^^^^^^^^^ ----------------------- unexpected argument of type `glam::Vec2`
   |
note: associated function defined here
  --> src\ui\mod.rs:47:12
   |
47 |     pub fn new() -> Self {
   |            ^^^
help: remove the extra argument
   |
69 -             ui_manager: UIManager::new(Vec2::new(800.0, 600.0)),
69 +             ui_manager: UIManager::new(),
   |

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:149:52
    |
149 |         self.title_label_id = Some(self.ui_manager.create_element(
    |                                    ----------------^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `create_element` not found for this struct
    |
help: there is a method `remove_element` with a similar name, but with different arguments
   --> src\ui\mod.rs:58:5
    |
58  |     pub fn remove_element(&mut self, id: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Label` found for enum `ElementType` in the current scope
   --> src\states\loading.rs:151:26
    |
151 |             ElementType::Label,
    |                          ^^^^^ variant or associated item not found in `ElementType`
    |
   ::: src\ui\mod.rs:21:1
    |
21  | pub enum ElementType {
    | -------------------- variant or associated item `Label` not found for this enum

error[E0599]: no method named `set_element_text` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:156:29
    |
156 |             self.ui_manager.set_element_text(title_id, "Pokemon GO - 鍔犺浇涓?..".to_string())?;
    |                             ^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_text` not found for this struct

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:157:29
    |
157 |             self.ui_manager.set_element_position(title_id, Vec2::new(400.0, 150.0))?;
    |                             ^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:158:29
    |
158 |             self.ui_manager.set_element_size(title_id, Vec2::new(400.0, 60.0))?;
    |                             ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:162:50
    |
162 |         let progress_container = self.ui_manager.create_element(
    |                                  ----------------^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `create_element` not found for this struct
    |
help: there is a method `remove_element` with a similar name, but with different arguments
   --> src\ui\mod.rs:58:5
    |
58  |     pub fn remove_element(&mut self, id: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:167:25
    |
167 |         self.ui_manager.set_element_position(progress_container, Vec2::new(200.0, 400.0))?;
    |                         ^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:168:25
    |
168 |         self.ui_manager.set_element_size(progress_container, Vec2::new(400.0, 40.0))?;
    |                         ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:171:53
    |
171 |         self.progress_bar_id = Some(self.ui_manager.create_element(
    |                                     ----------------^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `create_element` not found for this struct
    |
help: there is a method `remove_element` with a similar name, but with different arguments
   --> src\ui\mod.rs:58:5
    |
58  |     pub fn remove_element(&mut self, id: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `ProgressBar` found for enum `ElementType` in the current scope
   --> src\states\loading.rs:173:26
    |
173 |             ElementType::ProgressBar,
    |                          ^^^^^^^^^^^ variant or associated item not found in `ElementType`
    |
   ::: src\ui\mod.rs:21:1
    |
21  | pub enum ElementType {
    | -------------------- variant or associated item `ProgressBar` not found for this enum

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:178:29
    |
178 |             self.ui_manager.set_element_position(progress_id, Vec2::new(0.0, 0.0))?;
    |                             ^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:179:29
    |
179 |             self.ui_manager.set_element_size(progress_id, Vec2::new(400.0, 40.0))?;
    |                             ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `create_element` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:183:53
    |
183 |         self.status_label_id = Some(self.ui_manager.create_element(
    |                                     ----------------^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `create_element` not found for this struct
    |
help: there is a method `remove_element` with a similar name, but with different arguments
   --> src\ui\mod.rs:58:5
    |
58  |     pub fn remove_element(&mut self, id: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Label` found for enum `ElementType` in the current scope
   --> src\states\loading.rs:185:26
    |
185 |             ElementType::Label,
    |                          ^^^^^ variant or associated item not found in `ElementType`
    |
   ::: src\ui\mod.rs:21:1
    |
21  | pub enum ElementType {
    | -------------------- variant or associated item `Label` not found for this enum

error[E0599]: no method named `set_element_text` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:190:29
    |
190 |             self.ui_manager.set_element_text(status_id, "鍒濆鍖?..".to_string())?;
    |                             ^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_text` not found for this struct

error[E0599]: no method named `set_element_position` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:191:29
    |
191 |             self.ui_manager.set_element_position(status_id, Vec2::new(400.0, 480.0))?;
    |                             ^^^^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_position` not found for this struct

error[E0599]: no method named `set_element_size` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:192:29
    |
192 |             self.ui_manager.set_element_size(status_id, Vec2::new(400.0, 30.0))?;
    |                             ^^^^^^^^^^^^^^^^
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_size` not found for this struct
    |
help: there is a method `get_events` with a similar name, but with different arguments
   --> src\ui\mod.rs:76:5
    |
76  |     pub fn get_events(&mut self) -> Vec<UIEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `set_element_value` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:219:29
    |
219 |             self.ui_manager.set_element_value(progress_id, progress_text).ok();
    |                             ^^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_value` not found for this struct

error[E0599]: no method named `set_element_text` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:230:33
    |
230 |                 self.ui_manager.set_element_text(status_id, status_text).ok();
    |                                 ^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_text` not found for this struct

error[E0599]: no method named `set_element_text` found for struct `UIManager` in the current scope
   --> src\states\loading.rs:232:33
    |
232 |                 self.ui_manager.set_element_text(status_id, "鍔犺浇瀹屾垚!".to_string()).ok();
    |                                 ^^^^^^^^^^^^^^^^ method not found in `UIManager`
    |
   ::: src\ui\mod.rs:41:1
    |
41  | pub struct UIManager {
    | -------------------- method `set_element_text` not found for this struct

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> src\states\loading.rs:389:18
    |
389 |         renderer.clear(self.background_color * self.fade_alpha)?;
    |                  ^^^^^ --------------------------------------- unexpected argument of type `Vec4`
    |
note: method defined here
   --> src\states\mod.rs:53:12
    |
53  |     pub fn clear(&mut self) {
    |            ^^^^^
help: remove the extra argument
    |
389 -         renderer.clear(self.background_color * self.fade_alpha)?;
389 +         renderer.clear()?;
    |

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src\states\loading.rs:389:9
    |
389 |         renderer.clear(self.background_color * self.fade_alpha)?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `()`
    |
    = help: the trait `Try` is not implemented for `()`

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> src\states\loading.rs:392:25
    |
392 |         self.ui_manager.render(renderer)?;
    |                         ^^^^^^ -------- unexpected argument of type `&mut states::Renderer2D`
    |
note: method defined here
   --> src\ui\mod.rs:67:12
    |
67  |     pub fn render(&self) -> Result<(), GameError> {
    |            ^^^^^^
help: remove the extra argument
    |
392 -         self.ui_manager.render(renderer)?;
392 +         self.ui_manager.render()?;
    |

error[E0599]: no method named `draw_quad` found for mutable reference `&mut states::Renderer2D` in the current scope
   --> src\states\loading.rs:397:18
    |
397 |         renderer.draw_quad(
    |         ---------^^^^^^^^^ method not found in `&mut Renderer2D`

error[E0277]: `(dyn StateHandler + 'static)` doesn't implement `std::fmt::Debug`
   --> src\states\mod.rs:211:5
    |
207 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
211 |     pub state: Box<dyn StateHandler>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn StateHandler + 'static)` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `(dyn StateHandler + 'static)`
    = help: the following other types implement trait `std::fmt::Debug`:
              dyn bevy::prelude::Reflect
              dyn bevy::prelude::System<In = In, Out = Out>
              dyn std::any::Any + Send + std::marker::Sync
              dyn std::any::Any + Send
              dyn std::any::Any
              dyn tracing::Value
              dyn value_bag::internal::fmt::DowncastDebug + Send + std::marker::Sync
              dyn wgpu::send_sync::AnyWasmNotSendSync

error[E0599]: no variant or associated item named `A` found for enum `input::gamepad::GamepadButton` in the current scope
   --> src\input\mod.rs:174:84
    |
174 |             InputBinding::GamepadButton { gamepad_id: None, button: GamepadButton::A }
    |                                                                                    ^ variant or associated item not found in `GamepadButton`
    |
   ::: src\input\gamepad.rs:14:1
    |
14  | pub enum GamepadButton {
    | ---------------------- variant or associated item `A` not found for this enum

error[E0599]: no variant or associated item named `B` found for enum `input::gamepad::GamepadButton` in the current scope
   --> src\input\mod.rs:179:84
    |
179 |             InputBinding::GamepadButton { gamepad_id: None, button: GamepadButton::B }
    |                                                                                    ^ variant or associated item not found in `GamepadButton`
    |
   ::: src\input\gamepad.rs:14:1
    |
14  | pub enum GamepadButton {
    | ---------------------- variant or associated item `B` not found for this enum

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src\input\mod.rs:283:22
    |
283 |             gamepad: GamepadManager::new()?,
    |                      ^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `GamepadManager`
    |
    = help: the trait `Try` is not implemented for `GamepadManager`

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src\input\mod.rs:303:9
    |
303 |         self.gamepad.update(delta_time)?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `()`
    |
    = help: the trait `Try` is not implemented for `()`

error[E0599]: no method named `handle_gamepad_connected` found for struct `GamepadManager` in the current scope
   --> src\input\mod.rs:343:30
    |
343 |                 self.gamepad.handle_gamepad_connected(*gamepad_id);
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `GamepadManager`
    |
   ::: src\input\gamepad.rs:146:1
    |
146 | pub struct GamepadManager {
    | ------------------------- method `handle_gamepad_connected` not found for this struct

error[E0599]: no method named `handle_gamepad_disconnected` found for struct `GamepadManager` in the current scope
   --> src\input\mod.rs:346:30
    |
346 |                 self.gamepad.handle_gamepad_disconnected(*gamepad_id);
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `GamepadManager`
    |
   ::: src\input\gamepad.rs:146:1
    |
146 | pub struct GamepadManager {
    | ------------------------- method `handle_gamepad_disconnected` not found for this struct

error[E0061]: this method takes 3 arguments but 2 arguments were supplied
   --> src\input\mod.rs:349:30
    |
349 |                 self.gamepad.handle_button_pressed(*gamepad_id, *button);
    |                              ^^^^^^^^^^^^^^^^^^^^^---------------------- argument #3 of type `f32` is missing
    |
note: method defined here
   --> src\input\gamepad.rs:275:12
    |
275 |     pub fn handle_button_pressed(&mut self, gamepad_id: u32, button: GamepadButton, value: f32) {
    |            ^^^^^^^^^^^^^^^^^^^^^                                                    ----------
help: provide the argument
    |
349 |                 self.gamepad.handle_button_pressed(*gamepad_id, *button, /* f32 */);
    |                                                                        +++++++++++

error[E0061]: this method takes 3 arguments but 2 arguments were supplied
   --> src\input\mod.rs:358:28
    |
358 |                 self.touch.handle_touch_started(*touch_id, *position);
    |                            ^^^^^^^^^^^^^^^^^^^^---------------------- argument #3 of type `f32` is missing
    |
note: method defined here
   --> src\input\touch.rs:184:12
    |
184 |     pub fn handle_touch_started(&mut self, id: u64, position: glam::Vec2, pressure: f32) {
    |            ^^^^^^^^^^^^^^^^^^^^                                           -------------
help: provide the argument
    |
358 |                 self.touch.handle_touch_started(*touch_id, *position, /* f32 */);
    |                                                                     +++++++++++

error[E0308]: mismatched types
   --> src\input\mod.rs:361:69
    |
361 |                 self.touch.handle_touch_moved(*touch_id, *position, *delta);
    |                            ------------------                       ^^^^^^ expected `f32`, found `Vec2`
    |                            |
    |                            arguments to this method are incorrect
    |
note: method defined here
   --> src\input\touch.rs:224:12
    |
224 |     pub fn handle_touch_moved(&mut self, id: u64, position: glam::Vec2, pressure: f32) {
    |            ^^^^^^^^^^^^^^^^^^                                           -------------

error[E0308]: mismatched types
   --> src\input\mod.rs:550:54
    |
550 |                 Ok(if self.gamepad.is_button_pressed(*gamepad_id, button) { 1.0 } else { 0.0 })
    |                                    ----------------- ^^^^^^^^^^^ expected `u32`, found `Option<u32>`
    |                                    |
    |                                    arguments to this method are incorrect
    |
    = note: expected type `u32`
               found enum `std::option::Option<u32>`
note: method defined here
   --> src\input\gamepad.rs:384:12
    |
384 |     pub fn is_button_pressed(&self, gamepad_id: u32, button: &GamepadButton) -> bool {
    |            ^^^^^^^^^^^^^^^^^        ---------------
help: consider using `Option::expect` to unwrap the `std::option::Option<u32>` value, panicking if the value is an `Option::None`
    |
550 |                 Ok(if self.gamepad.is_button_pressed(*gamepad_id.expect("REASON"), button) { 1.0 } else { 0.0 })
    |                                                                 +++++++++++++++++

error[E0308]: mismatched types
   --> src\input\mod.rs:553:62
    |
553 |                 let axis_value = self.gamepad.get_axis_value(*gamepad_id, axis);
    |                                               -------------- ^^^^^^^^^^^ expected `u32`, found `Option<u32>`
    |                                               |
    |                                               arguments to this method are incorrect
    |
    = note: expected type `u32`
               found enum `std::option::Option<u32>`
note: method defined here
   --> src\input\gamepad.rs:399:12
    |
399 |     pub fn get_axis_value(&self, gamepad_id: u32, axis: &GamepadAxis) -> f32 {
    |            ^^^^^^^^^^^^^^        ---------------
help: consider using `Option::expect` to unwrap the `std::option::Option<u32>` value, panicking if the value is an `Option::None`
    |
553 |                 let axis_value = self.gamepad.get_axis_value(*gamepad_id.expect("REASON"), axis);
    |                                                                         +++++++++++++++++

error[E0658]: use of unstable library feature `linked_list_retain`
   --> src\data\cache.rs:118:30
    |
118 |                 access_order.retain(|k| k != &key);
    |                              ^^^^^^
    |
    = note: see issue #114135 <https://github.com/rust-lang/rust/issues/114135> for more information

error[E0658]: use of unstable library feature `linked_list_retain`
   --> src\data\cache.rs:173:34
    |
173 |                     access_order.retain(|k| k != key);
    |                                  ^^^^^^
    |
    = note: see issue #114135 <https://github.com/rust-lang/rust/issues/114135> for more information

error[E0308]: mismatched types
   --> src\data\cache.rs:178:24
    |
178 |                 if let Ok(data) = entry.data.downcast_ref::<T>() {
    |                        ^^^^^^^^   ------------------------------ this expression has type `std::option::Option<&T>`
    |                        |
    |                        expected `Option<&T>`, found `Result<_, _>`
    |
    = note: expected enum `std::option::Option<&T>`
               found enum `std::result::Result<_, _>`

error[E0658]: use of unstable library feature `linked_list_retain`
   --> src\data\cache.rs:206:26
    |
206 |             access_order.retain(|k| k != key);
    |                          ^^^^^^
    |
    = note: see issue #114135 <https://github.com/rust-lang/rust/issues/114135> for more information

error[E0308]: mismatched types
   --> src\data\database.rs:423:66
    |
423 |                 let backup = rusqlite::backup::Backup::new(conn, &dest_conn)
    |                              -----------------------------       ^^^^^^^^^^ types differ in mutability
    |                              |
    |                              arguments to this function are incorrect
    |
    = note: expected mutable reference `&mut rusqlite::Connection`
                       found reference `&rusqlite::Connection`
note: associated function defined here
   --> C:\Users\w2107\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\rusqlite-0.31.0\src\backup.rs:187:12
    |
187 |     pub fn new<'a, 'b>(from: &'a Connection, to: &'b mut Connection) -> Result<Backup<'a, 'b>> {
    |            ^^^

error[E0277]: `T` cannot be sent between threads safely
   --> src\data\mod.rs:157:51
    |
157 |                 self.cache.set(cache_key.clone(), data.clone());
    |                            ---                    ^^^^^^^^^^^^ `T` cannot be sent between threads safely
    |                            |
    |                            required by a bound introduced by this call
    |
note: required by a bound in `DataCache::set`
   --> src\data\cache.rs:92:20
    |
90  |     pub fn set<T>(&self, key: String, value: T) -> Result<(), GameError>
    |            --- required by a bound in this associated function
91  |     where
92  |         T: Clone + Send + Sync + 'static,
    |                    ^^^^ required by this bound in `DataCache::set`
help: consider further restricting type parameter `T` with trait `Send`
    |
144 |         T: for<'de> Deserialize<'de> + Clone + 'static + std::marker::Send,
    |                                                        +++++++++++++++++++

error[E0277]: `T` cannot be shared between threads safely
   --> src\data\mod.rs:157:51
    |
157 |                 self.cache.set(cache_key.clone(), data.clone());
    |                            ---                    ^^^^^^^^^^^^ `T` cannot be shared between threads safely
    |                            |
    |                            required by a bound introduced by this call
    |
note: required by a bound in `DataCache::set`
   --> src\data\cache.rs:92:27
    |
90  |     pub fn set<T>(&self, key: String, value: T) -> Result<(), GameError>
    |            --- required by a bound in this associated function
91  |     where
92  |         T: Clone + Send + Sync + 'static,
    |                           ^^^^ required by this bound in `DataCache::set`
help: consider further restricting type parameter `T` with trait `Sync`
    |
144 |         T: for<'de> Deserialize<'de> + Clone + 'static + std::marker::Sync,
    |                                                        +++++++++++++++++++

error[E0277]: `T` cannot be sent between threads safely
   --> src\data\mod.rs:174:43
    |
174 |         self.cache.set(cache_key.clone(), data.clone());
    |                    ---                    ^^^^^^^^^^^^ `T` cannot be sent between threads safely
    |                    |
    |                    required by a bound introduced by this call
    |
note: required by a bound in `DataCache::set`
   --> src\data\cache.rs:92:20
    |
90  |     pub fn set<T>(&self, key: String, value: T) -> Result<(), GameError>
    |            --- required by a bound in this associated function
91  |     where
92  |         T: Clone + Send + Sync + 'static,
    |                    ^^^^ required by this bound in `DataCache::set`
help: consider further restricting type parameter `T` with trait `Send`
    |
144 |         T: for<'de> Deserialize<'de> + Clone + 'static + std::marker::Send,
    |                                                        +++++++++++++++++++

error[E0277]: `T` cannot be shared between threads safely
   --> src\data\mod.rs:174:43
    |
174 |         self.cache.set(cache_key.clone(), data.clone());
    |                    ---                    ^^^^^^^^^^^^ `T` cannot be shared between threads safely
    |                    |
    |                    required by a bound introduced by this call
    |
note: required by a bound in `DataCache::set`
   --> src\data\cache.rs:92:27
    |
90  |     pub fn set<T>(&self, key: String, value: T) -> Result<(), GameError>
    |            --- required by a bound in this associated function
91  |     where
92  |         T: Clone + Send + Sync + 'static,
    |                           ^^^^ required by this bound in `DataCache::set`
help: consider further restricting type parameter `T` with trait `Sync`
    |
144 |         T: for<'de> Deserialize<'de> + Clone + 'static + std::marker::Sync,
    |                                                        +++++++++++++++++++

error[E0277]: `T` cannot be sent between threads safely
   --> src\data\mod.rs:218:43
    |
218 |         self.cache.set(cache_key.clone(), data.clone());
    |                    ---                    ^^^^^^^^^^^^ `T` cannot be sent between threads safely
    |                    |
    |                    required by a bound introduced by this call
    |
note: required by a bound in `DataCache::set`
   --> src\data\cache.rs:92:20
    |
90  |     pub fn set<T>(&self, key: String, value: T) -> Result<(), GameError>
    |            --- required by a bound in this associated function
91  |     where
92  |         T: Clone + Send + Sync + 'static,
    |                    ^^^^ required by this bound in `DataCache::set`
help: consider further restricting type parameter `T` with trait `Send`
    |
213 |         T: Serialize + Clone + 'static + std::marker::Send,
    |                                        +++++++++++++++++++

error[E0277]: `T` cannot be shared between threads safely
   --> src\data\mod.rs:218:43
    |
218 |         self.cache.set(cache_key.clone(), data.clone());
    |                    ---                    ^^^^^^^^^^^^ `T` cannot be shared between threads safely
    |                    |
    |                    required by a bound introduced by this call
    |
note: required by a bound in `DataCache::set`
   --> src\data\cache.rs:92:27
    |
90  |     pub fn set<T>(&self, key: String, value: T) -> Result<(), GameError>
    |            --- required by a bound in this associated function
91  |     where
92  |         T: Clone + Send + Sync + 'static,
    |                           ^^^^ required by this bound in `DataCache::set`
help: consider further restricting type parameter `T` with trait `Sync`
    |
213 |         T: Serialize + Clone + 'static + std::marker::Sync,
    |                                        +++++++++++++++++++

error[E0277]: the trait bound `for<'de> PokemonSpecies: Deserialize<'de>` is not satisfied
   --> src\data\mod.rs:273:30
    |
273 |                         self.load_data_batch(DataType::Pokemon, &pokemon_ids);
    |                              ^^^^^^^^^^^^^^^ the trait `for<'de> Deserialize<'de>` is not implemented for `PokemonSpecies`
    |
    = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `PokemonSpecies` type
    = note: for types from other crates check whether the crate offers a `serde` feature flag
    = help: the following other types implement trait `Deserialize<'de>`:
              &'a [u8]
              &'a serde_json::value::RawValue
              &'a std::path::Path
              &'a str
              ()
              (T,)
              (T0, T1)
              (T0, T1, T2)
            and 898 others
note: required by a bound in `DataManager::load_data_batch`
   --> src\data\mod.rs:236:12
    |
234 |     pub fn load_data_batch<T>(&mut self, data_type: DataType, ids: &[String]) -> Result<HashMap<String, T>, GameError>
    |            --------------- required by a bound in this associated function
235 |     where
236 |         T: for<'de> Deserialize<'de> + Clone + 'static,
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DataManager::load_data_batch`

warning: unused import: `Hasher`
  --> src\utils\mod.rs:14:23
   |
14 | use std::hash::{Hash, Hasher};
   |                       ^^^^^^

warning: unused import: `Hasher`
 --> src\assets\cache.rs:8:23
  |
8 | use std::hash::{Hash, Hasher};
  |                       ^^^^^^

warning: unused import: `Write`
 --> src\assets\compression.rs:8:21
  |
8 | use std::io::{Read, Write, Cursor};
  |                     ^^^^^

error[E0004]: non-exhaustive patterns: `&GameError::IOError(_)`, `&GameError::State(_)`, `&GameError::SystemError(_)` and 4 more not covered
  --> src\core\error.rs:88:15
   |
88 |         match self {
   |               ^^^^ patterns `&GameError::IOError(_)`, `&GameError::State(_)`, `&GameError::SystemError(_)` and 4 more not covered
   |
note: `GameError` defined here
  --> src\core\error.rs:10:10
   |
10 | pub enum GameError {
   |          ^^^^^^^^^
...
49 |     IOError(String),
   |     ------- not covered
...
52 |     State(String),
   |     ----- not covered
...
55 |     SystemError(String),
   |     ----------- not covered
...
58 |     CompressionError(String),
   |     ---------------- not covered
...
61 |     SerializationError(String),
   |     ------------------ not covered
   = note: the matched value is of type `&GameError`
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown, or multiple match arms
   |
127~             GameError::Unknown(msg) => write!(f, "鏈煡閿欒: {}", msg),
128~             _ => todo!(),
   |

warning: variable does not need to be mutable
   --> src\core\resource_manager.rs:181:13
    |
181 |         let mut manager = Self {
    |             ----^^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

error[E0502]: cannot borrow `metadata` as mutable because it is also borrowed as immutable
   --> src\core\resource_manager.rs:365:13
    |
358 |         if let Some(meta_arc) = metadata.get(&id) {
    |                                 -------- immutable borrow occurs here
...
365 |             metadata.remove(&id);
    |             ^^^^^^^^ mutable borrow occurs here
...
375 |         }
    |         - immutable borrow might be used here, when `meta` is dropped and runs the `Drop` code for type `RwLockReadGuard`

error[E0382]: borrow of moved value: `ids`
   --> src\core\resource_manager.rs:389:45
    |
383 |         let ids: Vec<ResourceId> = resource_names
    |             --- move occurs because `ids` has type `std::vec::Vec<u64>`, which does not implement the `Copy` trait
...
388 |         self.preload_sets.write().unwrap().insert(name.to_string(), ids);
    |                                                                     --- value moved here
389 |         info!("鍒涘缓棰勫姞杞介泦鍚? {} ({} 涓祫婧?", name, ids.len());
    |                                                       ^^^ value borrowed here after move
    |
help: consider cloning the value if the performance cost is acceptable
    |
388 |         self.preload_sets.write().unwrap().insert(name.to_string(), ids.clone());
    |                                                                        ++++++++

warning: unused variable: `path`
   --> src\core\resource_manager.rs:501:21
    |
501 |                 let path = meta.path.clone();
    |                     ^^^^ help: if this is intentional, prefix it with an underscore: `_path`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `resource_type`
   --> src\core\resource_manager.rs:502:21
    |
502 |                 let resource_type = meta.resource_type.clone();
    |                     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_resource_type`

warning: unused variable: `priority`
   --> src\core\resource_manager.rs:503:21
    |
503 |                 let priority = meta.priority;
    |                     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_priority`

warning: unused variable: `log_queue`
   --> src\utils\logger.rs:510:13
    |
510 |         let log_queue = self.log_queue.clone();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_log_queue`

warning: unused variable: `entry`
   --> src\utils\logger.rs:645:13
    |
645 |         let entry = LogEntry::new(
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_entry`

warning: unused variable: `config`
   --> src\assets\compression.rs:177:37
    |
177 |     fn compress(&self, data: &[u8], config: &CompressionConfig) -> Result<Vec<u8>> {
    |                                     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

warning: unused variable: `config`
   --> src\assets\compression.rs:261:37
    |
261 |     fn compress(&self, data: &[u8], config: &CompressionConfig) -> Result<Vec<u8>> {
    |                                     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

error[E0502]: cannot borrow `*self` as mutable because it is also borrowed as immutable
   --> src\assets\compression.rs:518:33
    |
517 |         for &algorithm in self.compressors.keys() {
    |                           -----------------------
    |                           |
    |                           immutable borrow occurs here
    |                           immutable borrow later used here
518 |             if let Ok(result) = self.compress(data, algorithm) {
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here

error[E0382]: borrow of moved value: `format`
   --> src\assets\loader.rs:187:67
    |
183 |         if let Some(format) = self.detect_image_format(data) {
    |                     ------ move occurs because `format` has type `std::string::String`, which does not implement the `Copy` trait
184 |             metadata.insert("format".to_string(), format);
    |                                                   ------ value moved here
...
187 |             let (width, height) = self.get_image_dimensions(data, &format)?;
    |                                                                   ^^^^^^^ value borrowed here after move
    |
    = note: borrow occurs due to deref coercion to `str`
help: consider cloning the value if the performance cost is acceptable
    |
184 |             metadata.insert("format".to_string(), format.clone());
    |                                                         ++++++++

error[E0382]: borrow of moved value: `format`
   --> src\assets\loader.rs:294:86
    |
290 |         if let Some(format) = self.detect_audio_format(data) {
    |                     ------ move occurs because `format` has type `std::string::String`, which does not implement the `Copy` trait
291 |             metadata.insert("format".to_string(), format);
    |                                                   ------ value moved here
...
294 |             if let Ok((sample_rate, channels, duration)) = self.get_audio_info(data, &format) {
    |                                                                                      ^^^^^^^ value borrowed here after move
    |
    = note: borrow occurs due to deref coercion to `str`
help: consider cloning the value if the performance cost is acceptable
    |
291 |             metadata.insert("format".to_string(), format.clone());
    |                                                         ++++++++

warning: unused variable: `parsers_count`
   --> src\assets\loader.rs:613:13
    |
613 |         let parsers_count = self.parsers.len(); // 涓轰簡妫€鏌ヨВ鏋愬櫒鏄惁鍙敤
    |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_parsers_count`

error[E0382]: borrow of moved value: `path`
   --> src\assets\mod.rs:231:35
    |
228 |         let path = path.as_ref().to_path_buf();
    |             ---- move occurs because `path` has type `PathBuf`, which does not implement the `Copy` trait
229 |         if !self.base_paths.contains(&path) {
230 |             self.base_paths.push(path);
    |                                  ---- value moved here
231 |             info!("娣诲姞璧勬簮璺緞: {:?}", path);
    |                                         ^^^^ value borrowed here after move
    |
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider cloning the value if the performance cost is acceptable
    |
230 |             self.base_paths.push(path.clone());
    |                                      ++++++++

error[E0499]: cannot borrow `assets` as mutable more than once at a time
   --> src\assets\mod.rs:559:42
    |
556 |         if let Some(entry) = assets.get_mut(asset_id) {
    |                              ------ first mutable borrow occurs here
...
559 |                 if let Some(dep_entry) = assets.get_mut(old_dep) {
    |                                          ^^^^^^ second mutable borrow occurs here
...
565 |             entry.dependencies = dependencies.clone();
    |             ------------------ first borrow later used here

warning: unused variable: `sample_duration`
   --> src\audio\manager.rs:296:13
    |
296 |         let sample_duration = Duration::from_secs_f64(1.0 / config.sample_rate as f64);
    |             ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_sample_duration`

warning: unused variable: `fade_in`
   --> src\audio\manager.rs:416:9
    |
416 |         fade_in: Option<Duration>,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_fade_in`

error[E0506]: cannot assign to `self.fade_state` because it is borrowed
   --> src\audio\sound.rs:427:17
    |
421 |         if let Some(fade) = &self.fade_state {
    |                             ---------------- `self.fade_state` is borrowed here
...
427 |                 self.fade_state = None;
    |                 ^^^^^^^^^^^^^^^^^^^^^^ `self.fade_state` is assigned to here but it was already borrowed
...
430 |                 if fade.target_volume == 0.0 {
    |                    ------------------ borrow later used here

error[E0382]: borrow of moved value: `effect`
   --> src\audio\sound.rs:443:48
    |
441 |     pub fn add_effect(&mut self, effect: SoundEffect) {
    |                                  ------ move occurs because `effect` has type `SoundEffect`, which does not implement the `Copy` trait
442 |         self.effects.push(effect);
    |                           ------ value moved here
443 |         debug!("涓洪煶棰戝疄渚?{} 娣诲姞鏁堟灉: {:?}", self.id, effect.effect_type);
    |                                                         ^^^^^^^^^^^^^^^^^^ value borrowed here after move
    |
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `debug` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider cloning the value if the performance cost is acceptable
    |
442 |         self.effects.push(effect.clone());
    |                                 ++++++++

error[E0382]: use of moved value: `effect`
   --> src\audio\music.rs:424:33
    |
421 |     pub fn add_effect(&mut self, effect: SoundEffect) {
    |                                  ------ move occurs because `effect` has type `SoundEffect`, which does not implement the `Copy` trait
422 |         self.effects.push(effect);
    |                           ------ value moved here
423 |         if let Some(ref mut instance) = self.sound_instance {
424 |             instance.add_effect(effect);
    |                                 ^^^^^^ value used here after move
    |
help: consider cloning the value if the performance cost is acceptable
    |
422 |         self.effects.push(effect.clone());
    |                                 ++++++++

error[E0382]: borrow of moved value: `context`
   --> src\audio\music.rs:680:32
    |
678 |     pub fn set_game_context(&mut self, context: GameContext) {
    |                                        ------- move occurs because `context` has type `GameContext`, which does not implement the `Copy` trait
679 |         self.current_context = Some(context);
    |                                     ------- value moved here
680 |         debug!("璁剧疆娓告垙鎯呭: {:?}", context);
    |                                      ^^^^^^^ value borrowed here after move
    |
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `debug` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider cloning the value if the performance cost is acceptable
    |
679 |         self.current_context = Some(context.clone());
    |                                            ++++++++

error[E0507]: cannot move out of `*context` which is behind a shared reference
   --> src\audio\music.rs:686:64
    |
686 |             let suitable_tracks = self.find_tracks_for_context(*context);
    |                                                                ^^^^^^^^ move occurs because `*context` has type `GameContext`, which does not implement the `Copy` trait
    |
help: consider cloning the value if the performance cost is acceptable
    |
686 -             let suitable_tracks = self.find_tracks_for_context(*context);
686 +             let suitable_tracks = self.find_tracks_for_context(context.clone());
    |

warning: unused variable: `category`
   --> src\audio\mod.rs:341:57
    |
341 |     pub fn load_sound(&mut self, id: &str, path: &Path, category: AudioCategory) -> Result<()> {
    |                                                         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_category`

error[E0502]: cannot borrow `*self` as mutable because it is also borrowed as immutable
   --> src\audio\mod.rs:720:21
    |
719 |         for &instance_id in self.active_instances.keys().collect::<Vec<_>>() {
    |                             ------------------------------------------------
    |                             |
    |                             immutable borrow occurs here
    |                             immutable borrow later used here
720 |             let _ = self.stop_sound(instance_id, None);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here

error[E0502]: cannot borrow `self.node_map` as mutable because it is also borrowed as immutable
   --> src\creature_engine\evolution_tree.rs:276:13
    |
264 |         let base_idx = self.node_map.get(base_creature)
    |                        ------------- immutable borrow occurs here
...
276 |             self.node_map.insert(branch_creature, branch_idx);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here
...
285 |             self.graph.add_edge(*base_idx, branch_idx, edge);
    |                                 --------- immutable borrow later used here

warning: unused variable: `creature`
   --> src\creature_engine\evolution_tree.rs:517:38
    |
517 |     fn get_blocked_evolutions(&self, creature: &GeneratedCreature) -> CreatureEngineResult<Vec<BlockedEvolution>> {
    |                                      ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_creature`

warning: variable does not need to be mutable
   --> src\creature_engine\evolution_tree.rs:518:13
    |
518 |         let mut blocked = Vec::new();
    |             ----^^^^^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `path_map`
   --> src\creature_engine\evolution_tree.rs:575:9
    |
575 |         path_map: &HashMap<NodeIndex, i32>
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_path_map`

error[E0382]: borrow of moved value: `missing`
   --> src\creature_engine\evolution_tree.rs:617:32
    |
595 |         let mut missing = Vec::new();
    |             ----------- move occurs because `missing` has type `std::vec::Vec<MissingRequirement>`, which does not implement the `Copy` trait
...
615 |             missing,
    |             ------- value moved here
616 |             difficulty,
617 |             estimated_time: if missing.is_empty() { Some(0) } else { Some(3600) },
    |                                ^^^^^^^ value borrowed here after move
    |
help: consider cloning the value if the performance cost is acceptable
    |
615 |             missing: missing.clone(),
    |                    +++++++++++++++++

warning: unused variable: `issue`
   --> src\creature_engine\balance_system.rs:806:78
    |
806 | ...creature: &GeneratedCreature, issue: &BalanceViolation) -> CreatureEngineResult<SuggestedAdjustment> {
    |                                  ^^^^^ help: if this is intentional, prefix it with an underscore: `_issue`

warning: unused variable: `issue`
   --> src\creature_engine\balance_system.rs:839:74
    |
839 | ...creature: &GeneratedCreature, issue: &BalanceViolation) -> CreatureEngineResult<SuggestedAdjustment> {
    |                                  ^^^^^ help: if this is intentional, prefix it with an underscore: `_issue`

warning: unused variable: `creature`
   --> src\creature_engine\balance_system.rs:872:41
    |
872 |     fn create_generic_adjustment(&self, creature: &GeneratedCreature, issue: &BalanceViolation) -> CreatureEngineResult<SuggestedAdjustme...
    |                                         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_creature`

warning: unused variable: `issue`
   --> src\creature_engine\balance_system.rs:872:71
    |
872 | ...creature: &GeneratedCreature, issue: &BalanceViolation) -> CreatureEngineResult<SuggestedAdjustment> {
    |                                  ^^^^^ help: if this is intentional, prefix it with an underscore: `_issue`

warning: unused variable: `creature`
   --> src\creature_engine\balance_system.rs:887:35
    |
887 |     fn analyze_meta_impact(&self, creature: &GeneratedCreature) -> CreatureEngineResult<MetaImpactAnalysis> {
    |                                   ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_creature`

warning: unused variable: `mean_power`
   --> src\creature_engine\balance_system.rs:920:13
    |
920 |         let mean_power = power_levels.iter().sum::<f64>() / n;
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_mean_power`

warning: unused variable: `change`
    --> src\creature_engine\rarity_system.rs:1148:29
     |
1148 |     fn assess_impact(&self, change: &RarityChange) -> MarketImpactAssessment {
     |                             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_change`

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\creature_engine\trait_system.rs:843:38
    |
842 |             if let Some(trait_def) = self.select_random_trait(&filtered_traits)? {
    |                                      ---- mutable borrow occurs here
843 |                 let trait_instance = self.instantiate_trait(trait_def, template)?;
    |                                      ^^^^                   --------- mutable borrow later used here
    |                                      |
    |                                      immutable borrow occurs here

error: lifetime may not live long enough
    --> src\creature_engine\trait_system.rs:1022:9
     |
1002 |     fn select_random_trait(&mut self, traits: &[TraitDefinition]) -> CreatureEngineResult<Option<&TraitDefinition>> {
     |                            -                  - let's call the lifetime of this reference `'1`
     |                            |
     |                            let's call the lifetime of this reference `'2`
...
1022 |         Ok(traits.last())
     |         ^^^^^^^^^^^^^^^^^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`
     |
help: consider introducing a named lifetime parameter and update trait if needed
     |
1002 |     fn select_random_trait<'a>(&mut self, traits: &'a [TraitDefinition]) -> CreatureEngineResult<Option<&'a TraitDefinition>> {
     |                           ++++                     ++                                                    ++

warning: unused variable: `traits`
    --> src\creature_engine\trait_system.rs:1071:73
     |
1071 |     fn check_synergy_conditions(&self, conditions: &[SynergyCondition], traits: &[CreatureTrait]) -> CreatureEngineResult<bool> {
     |                                                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_traits`

warning: unused variable: `stat_name`
    --> src\creature_engine\trait_system.rs:1092:14
     |
1092 |         for (stat_name, modifier) in &mut synergy_trait.stat_modifiers {
     |              ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_stat_name`

error[E0382]: borrow of partially moved value: `conflict`
    --> src\creature_engine\trait_system.rs:1279:65
     |
1277 |                 affected_traits: conflict.conflicting_traits,
     |                                  --------------------------- value partially moved here
1278 |                 severity: conflict.severity,
1279 |                 description: self.generate_conflict_description(&conflict),
     |                                                                 ^^^^^^^^^ value borrowed here after partial move
     |
     = note: partial move occurs because `conflict.conflicting_traits` has type `std::vec::Vec<std::string::String>`, which does not implement the `Copy` trait

warning: unused variable: `creature`
    --> src\creature_engine\mutation.rs:1819:39
     |
1819 |     fn create_mutation_context(&self, creature: &GeneratedCreature) -> CreatureEngineResult<MutationContext> {
     |                                       ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_creature`

warning: unused variable: `context`
    --> src\creature_engine\mutation.rs:1880:110
     |
1880 | ...eature: &GeneratedCreature, context: &MutationContext) -> CreatureEngineResult<Vec<Mutation>> {
     |                                ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `creature`
    --> src\creature_engine\mutation.rs:1900:44
     |
1900 |     fn generate_forced_mutation(&mut self, creature: &GeneratedCreature, context: &MutationContext) -> CreatureEngineResult<Mutation> {
     |                                            ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_creature`

warning: unused variable: `context`
    --> src\creature_engine\mutation.rs:1900:74
     |
1900 |     fn generate_forced_mutation(&mut self, creature: &GeneratedCreature, context: &MutationContext) -> CreatureEngineResult<Mutation> {
     |                                                                          ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

error[E0596]: cannot borrow `self.rng` as mutable, as it is behind a `&` reference
    --> src\creature_engine\mutation.rs:1976:37
     |
1976 |                     let variation = self.rng.sample(Normal::new(0.0, *variance).unwrap()) as f64;
     |                                     ^^^^^^^^ `self` is a `&` reference, so the data it refers to cannot be borrowed as mutable
     |
help: consider changing this to be a mutable reference
     |
1955 |     fn apply_stat_mutation(&mut self, creature: &mut GeneratedCreature, stat_mutation: &StatMutationType, affected_stat: &str) -> CreatureEngineResult<()> {
     |                             +++

warning: unused variable: `stat_name`
    --> src\creature_engine\mutation.rs:2000:14
     |
2000 |         for (stat_name, modifier) in &mut trait_obj.stat_modifiers {
     |              ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_stat_name`

warning: unused variable: `creature`
    --> src\creature_engine\mutation.rs:2041:62
     |
2041 |     fn record_mutation_event(&mut self, mutation: &Mutation, creature: &GeneratedCreature) -> CreatureEngineResult<()> {
     |                                                              ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_creature`

error[E0382]: borrow of moved value: `predictions`
    --> src\creature_engine\mutation.rs:2116:23
     |
2086 |     fn combine_effect_predictions(&self, predictions: Vec<MutationEffectPrediction>) -> CreatureEngineResult<MutationEffectPrediction> {
     |                                          ----------- move occurs because `predictions` has type `std::vec::Vec<MutationEffectPrediction>`, which does not implement the `Copy` trait
...
2103 |         for prediction in predictions {
     |                           ----------- `predictions` moved due to this implicit call to `.into_iter()`
...
2116 |             *value /= predictions.len() as f64;
     |                       ^^^^^^^^^^^ value borrowed here after move
     |
note: `into_iter` takes ownership of the receiver `self`, which moves `predictions`
    --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359\library\core\src\iter\traits\collect.rs:313:18
help: consider iterating over a slice of the `std::vec::Vec<MutationEffectPrediction>`'s content to avoid moving into the `for` loop
     |
2103 |         for prediction in &predictions {
     |                           +

error[E0382]: use of moved value: `performance_results`
    --> src\creature_engine\validator.rs:1688:38
     |
1672 |         let performance_results = self.performance_validator.validate_performance(creature, context)?;
     |             ------------------- move occurs because `performance_results` has type `std::vec::Vec<PerformanceResult>`, which does not implement the `Copy` trait
1673 |         
1674 |         for result in performance_results {
     |                       ------------------- `performance_results` moved due to this implicit call to `.into_iter()`
...
1688 |         report.performance_metrics = performance_results.into_iter()
     |                                      ^^^^^^^^^^^^^^^^^^^ value used here after move
     |
note: `into_iter` takes ownership of the receiver `self`, which moves `performance_results`
    --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359\library\core\src\iter\traits\collect.rs:313:18
help: consider iterating over a slice of the `std::vec::Vec<PerformanceResult>`'s content to avoid moving into the `for` loop
     |
1674 |         for result in &performance_results {
     |                       +

warning: unused variable: `validator_name`
    --> src\creature_engine\validator.rs:1727:14
     |
1727 |         for (validator_name, validator) in &self.custom_validators {
     |              ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_validator_name`

error[E0382]: borrow of moved value: `result.errors`
    --> src\creature_engine\validator.rs:1743:21
     |
1731 |                 for error in result.errors {
     |                              ------------- `result.errors` moved due to this implicit call to `.into_iter()`
...
1743 |                 if !result.errors.is_empty() {
     |                     ^^^^^^^^^^^^^ value borrowed here after move
     |
note: `into_iter` takes ownership of the receiver `self`, which moves `result.errors`
    --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359\library\core\src\iter\traits\collect.rs:313:18
     = note: move occurs because `result.errors` has type `std::vec::Vec<validator::ValidationError>`, which does not implement the `Copy` trait
help: consider iterating over a slice of the `std::vec::Vec<validator::ValidationError>`'s content to avoid moving into the `for` loop
     |
1731 |                 for error in &result.errors {
     |                              +

warning: unused variable: `cached_result`
    --> src\creature_engine\validator.rs:1779:17
     |
1779 |             let cached_result = CachedValidationResult {
     |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cached_result`

warning: unused variable: `report`
    --> src\creature_engine\validator.rs:1792:42
     |
1792 |     fn collect_validation_metrics(&self, report: &ValidationReport) -> CreatureEngineResult<()> {
     |                                          ^^^^^^ help: if this is intentional, prefix it with an underscore: `_report`

warning: unused variable: `rules`
    --> src\creature_engine\validator.rs:1832:12
     |
1832 |     fn new(rules: &[ValidationRule]) -> CreatureEngineResult<Self> {
     |            ^^^^^ help: if this is intentional, prefix it with an underscore: `_rules`

warning: unused variable: `context`
    --> src\creature_engine\validator.rs:1873:63
     |
1873 |     fn check_consistency(&self, creature: &GeneratedCreature, context: &ValidationContext) -> CreatureEngineResult<Vec<ConsistencyResult>> {
     |                                                               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
    --> src\creature_engine\validator.rs:1910:65
     |
1910 |     fn validate_references(&self, creature: &GeneratedCreature, context: &ValidationContext) -> CreatureEngineResult<Vec<ReferenceResult>> {
     |                                                                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
    --> src\creature_engine\validator.rs:1947:66
     |
1947 | ...eature: &GeneratedCreature, context: &ValidationContext) -> CreatureEngineResult<Vec<PerformanceResult>> {
     |                                ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
    --> src\creature_engine\validator.rs:1992:63
     |
1992 |     fn validate_security(&self, creature: &GeneratedCreature, context: &ValidationContext) -> CreatureEngineResult<SecurityResult> {
     |                                                               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: variable does not need to be mutable
    --> src\creature_engine\validator.rs:1994:13
     |
1994 |         let mut threats = Vec::new();
     |             ----^^^^^^^
     |             |
     |             help: remove this `mut`

warning: variable does not need to be mutable
    --> src\creature_engine\validator.rs:1997:13
     |
1997 |         let mut compliance_gaps = Vec::new();
     |             ----^^^^^^^^^^^^^^^
     |             |
     |             help: remove this `mut`

warning: unused variable: `policy`
    --> src\creature_engine\validator.rs:2058:31
     |
2058 |     fn evaluate_policy(&self, policy: &AccessPolicy, context: &AccessContext) -> PolicyDecision {
     |                               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_policy`

warning: unused variable: `context`
    --> src\creature_engine\validator.rs:2058:54
     |
2058 |     fn evaluate_policy(&self, policy: &AccessPolicy, context: &AccessContext) -> PolicyDecision {
     |                                                      ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `level`
   --> src\game_modes.rs:249:35
    |
249 |             Requirement::MinLevel(level) => {
    |                                   ^^^^^ help: if this is intentional, prefix it with an underscore: `_level`

warning: unused variable: `count`
   --> src\game_modes.rs:253:37
    |
253 |             Requirement::BadgeCount(count) => {
    |                                     ^^^^^ help: if this is intentional, prefix it with an underscore: `_count`

warning: unused variable: `story`
   --> src\game_modes.rs:257:41
    |
257 |             Requirement::CompletedStory(story) => {
    |                                         ^^^^^ help: if this is intentional, prefix it with an underscore: `_story`

warning: unused variable: `item_id`
   --> src\game_modes.rs:265:41
    |
265 |             Requirement::ItemPossession(item_id, count) => {
    |                                         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_item_id`

warning: unused variable: `count`
   --> src\game_modes.rs:265:50
    |
265 |             Requirement::ItemPossession(item_id, count) => {
    |                                                  ^^^^^ help: if this is intentional, prefix it with an underscore: `_count`

error[E0507]: cannot move out of `self.current_state` which is behind a shared reference
   --> src\game_modes.rs:334:9
    |
334 |         self.current_state
    |         ^^^^^^^^^^^^^^^^^^ move occurs because `self.current_state` has type `GameState`, which does not implement the `Copy` trait
    |
help: consider cloning the value if the performance cost is acceptable
    |
334 |         self.current_state.clone()
    |                           ++++++++

warning: unused variable: `item_type`
   --> src\player\inventory.rs:189:39
    |
189 |     pub fn get_item_type_count(&self, item_type: ItemType) -> u32 {
    |                                       ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_item_type`

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\player\mod.rs:313:13
    |
311 |         if let Some(ref mut player) = self.current_player {
    |                     -------------- mutable borrow occurs here
312 |             player.last_save = std::time::SystemTime::now();
313 |             self.save_player_to_file(player)?;
    |             ^^^^                     ------ mutable borrow later used here
    |             |
    |             immutable borrow occurs here

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\player\mod.rs:367:56
    |
354 |         if let Some(ref mut player) = self.current_player {
    |                     -------------- mutable borrow occurs here
...
367 |                 player.level_info.experience_to_next = self.calculate_experience_to_next_level(player.level_info.level);
    |                                                        ^^^^ immutable borrow occurs here       ----------------------- mutable borrow later used here

warning: unused variable: `seen`
   --> src\player\mod.rs:531:13
    |
531 |         let seen = self.pokedex.values().filter(|e| e.seen).count() as u32;
    |             ^^^^ help: if this is intentional, prefix it with an underscore: `_seen`

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\save.rs:247:25
    |
239 |         let save = self.current_save.as_mut()
    |                    ----------------- mutable borrow occurs here
...
247 |         save.checksum = self.calculate_checksum(save);
    |                         ^^^^                    ---- mutable borrow later used here
    |                         |
    |                         immutable borrow occurs here

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\save.rs:250:9
    |
239 |         let save = self.current_save.as_mut()
    |                    ----------------- mutable borrow occurs here
...
250 |         self.create_backup(slot)?;
    |         ^^^^ immutable borrow occurs here
...
254 |         self.write_save_file(&save_path, save)?;
    |                                          ---- mutable borrow later used here

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\save.rs:253:25
    |
239 |         let save = self.current_save.as_mut()
    |                    ----------------- mutable borrow occurs here
...
253 |         let save_path = self.get_save_path(slot);
    |                         ^^^^ immutable borrow occurs here
254 |         self.write_save_file(&save_path, save)?;
    |                                          ---- mutable borrow later used here

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\save.rs:254:9
    |
239 |         let save = self.current_save.as_mut()
    |                    ----------------- mutable borrow occurs here
...
254 |         self.write_save_file(&save_path, save)?;
    |         ^^^^                             ---- mutable borrow later used here
    |         |
    |         immutable borrow occurs here

warning: unused variable: `delta_time`
  --> src\ui\mod.rs:62:30
   |
62 |     pub fn update(&mut self, delta_time: f32) -> Result<(), GameError> {
   |                              ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_delta_time`

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\world\map.rs:597:34
    |
595 |         if let Some(ref mut map) = self.current_map {
    |                     ----------- mutable borrow occurs here
596 |             // 璁＄畻闇€瑕佸姞杞界殑鍒嗗潡
597 |             let chunks_to_load = self.calculate_chunks_in_radius(camera_position, self.chunk_load_radius, map);
    |                                  ^^^^ immutable borrow occurs here                                        --- mutable borrow later used here

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\world\map.rs:598:36
    |
595 |         if let Some(ref mut map) = self.current_map {
    |                     ----------- mutable borrow occurs here
...
598 |             let chunks_to_unload = self.calculate_chunks_to_unload(camera_position, self.chunk_unload_radius, map);
    |                                    ^^^^ immutable borrow occurs here                                          --- mutable borrow later used here

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\world\map.rs:623:25
    |
595 |         if let Some(ref mut map) = self.current_map {
    |                     ----------- mutable borrow occurs here
...
623 |                         self.load_chunk_data(chunk)?;
    |                         ^^^^ immutable borrow occurs here
...
628 |                         if !map.loaded_chunks.contains(&chunk_id) {
    |                             ----------------- mutable borrow later used here

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\world\npc.rs:527:20
    |
521 |         if let Some(npc) = self.npcs.get_mut(&npc_id) {
    |                            --------- mutable borrow occurs here
...
527 |                 if self.check_dialogue_conditions(&root_node.conditions, player_id, npc)? {
    |                    ^^^^ immutable borrow occurs here                                --- mutable borrow later used here

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\world\npc.rs:568:32
    |
560 |         if let Some(dialogue_state) = self.active_dialogues.get_mut(&npc_id) {
    |                                       --------------------- mutable borrow occurs here
...
568 |                             if self.check_dialogue_conditions(&choice.conditions, player_id, npc)? {
    |                                ^^^^ immutable borrow occurs here
...
573 |                                 dialogue_state.current_node = choice.next_node;
    |                                 ---------------------------------------------- mutable borrow later used here

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\world\npc.rs:570:33
    |
560 |         if let Some(dialogue_state) = self.active_dialogues.get_mut(&npc_id) {
    |                                       --------------------- mutable borrow occurs here
...
570 |                                 self.execute_dialogue_actions(&choice.actions, player_id, npc)?;
    |                                 ^^^^ immutable borrow occurs here
...
573 |                                 dialogue_state.current_node = choice.next_node;
    |                                 ---------------------------------------------- mutable borrow later used here

error[E0502]: cannot borrow `*npc` as mutable because it is also borrowed as immutable
   --> src\world\npc.rs:570:33
    |
562 |                 if let Some(ref dialogue_tree) = npc.dialogue_tree {
    |                             ----------------- immutable borrow occurs here
...
570 |                                 self.execute_dialogue_actions(&choice.actions, player_id, npc)?;
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here
...
576 |                                 if let Some(next_node) = dialogue_tree.nodes.get(&choice.next_node) {
    |                                                          ------------------- immutable borrow later used here

warning: unused variable: `player_id`
   --> src\world\npc.rs:667:9
    |
667 |         player_id: u64,
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_player_id`

warning: unused variable: `trainer_id`
   --> src\world\npc.rs:708:47
    |
708 |                 DialogueAction::StartBattle { trainer_id } => {
    |                                               ^^^^^^^^^^ help: try ignoring the field: `trainer_id: _`

warning: unused variable: `player_id`
   --> src\world\npc.rs:695:9
    |
695 |         player_id: u64,
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_player_id`

error[E0594]: cannot assign to `self.battles_initiated`, which is behind a `&` reference
   --> src\world\npc.rs:710:25
    |
710 |                         self.battles_initiated += 1;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `self` is a `&` reference, so the data it refers to cannot be written
    |
help: consider changing this to be a mutable reference
    |
693 |         &mut self,
    |          +++

warning: unused variable: `npc_id`
   --> src\world\npc.rs:738:13
    |
738 |         for npc_id in dialogues_to_advance {
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_npc_id`

warning: unused variable: `radius`
   --> src\world\npc.rs:771:38
    |
771 |                 AIBehavior::Wander { radius, speed } => {
    |                                      ^^^^^^ help: try ignoring the field: `radius: _`

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\world\npc.rs:803:13
    |
765 |         if let Some(npc) = self.npcs.get_mut(&npc_id) {
    |                            --------- mutable borrow occurs here
...
803 |             self.update_npc_mood(npc, distance_to_player);
    |             ^^^^                 --- mutable borrow later used here
    |             |
    |             immutable borrow occurs here

warning: unused variable: `delta_time`
   --> src\world\environment.rs:464:35
    |
464 |     fn update_lighting(&mut self, delta_time: f32) -> Result<(), GameError> {
    |                                   ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_delta_time`

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\world\events.rs:359:24
    |
333 |         for trigger in self.triggers.values_mut() {
    |                        --------------------------
    |                        |
    |                        mutable borrow occurs here
    |                        mutable borrow later used here
...
359 |                     if self.check_trigger_conditions(&trigger.conditions, &entity_type) {
    |                        ^^^^ immutable borrow occurs here

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\world\events.rs:457:20
    |
451 |         for conditional_event in &mut self.conditional_events {
    |                                  ----------------------------
    |                                  |
    |                                  mutable borrow occurs here
    |                                  mutable borrow later used here
...
457 |                 if self.check_event_condition(&conditional_event.condition) {
    |                    ^^^^ immutable borrow occurs here

warning: unused variable: `start_hour`
   --> src\world\events.rs:556:41
    |
556 |             EventCondition::TimeOfDay { start_hour, end_hour } => {
    |                                         ^^^^^^^^^^ help: try ignoring the field: `start_hour: _`

warning: unused variable: `end_hour`
   --> src\world\events.rs:556:53
    |
556 |             EventCondition::TimeOfDay { start_hour, end_hour } => {
    |                                                     ^^^^^^^^ help: try ignoring the field: `end_hour: _`

warning: unused variable: `source_filter`
   --> src\world\events.rs:566:25
    |
566 |         if let Some(ref source_filter) = filter.source_filter {
    |                         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_source_filter`

warning: unused variable: `event`
   --> src\world\events.rs:564:36
    |
564 |     fn event_matches_filter(&self, event: &GameEvent, filter: &EventFilter) -> bool {
    |                                    ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

error[E0499]: cannot borrow `*self` as mutable more than once at a time
   --> src\world\mod.rs:247:17
    |
236 |         if let Some(ref mut world) = self.current_world {
    |                     ------------- first mutable borrow occurs here
...
247 |                 self.load_map(map_id)?;
    |                 ^^^^ second mutable borrow occurs here
248 |                 world.current_map = Some(map_id);
    |                 -------------------------------- first borrow later used here

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\world\mod.rs:374:13
    |
372 |         if let Some(ref mut world) = self.current_world {
    |                     ------------- mutable borrow occurs here
373 |             // 鏇存柊涓栫晫鏃堕棿
374 |             self.update_world_time(&mut world.world_time, delta_time);
    |             ^^^^                   --------------------- mutable borrow later used here
    |             |
    |             immutable borrow occurs here

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\world\mod.rs:377:13
    |
372 |         if let Some(ref mut world) = self.current_world {
    |                     ------------- mutable borrow occurs here
...
377 |             self.update_weather(&mut world.weather, delta_time);
    |             ^^^^                ------------------ mutable borrow later used here
    |             |
    |             immutable borrow occurs here

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\world\mod.rs:388:21
    |
372 |         if let Some(ref mut world) = self.current_world {
    |                     ------------- mutable borrow occurs here
...
386 |             for entity in world.entities.values_mut() {
    |                           --------------------------- mutable borrow later used here
387 |                 if entity.active {
388 |                     self.update_entity(entity, delta_time)?;
    |                     ^^^^ immutable borrow occurs here

warning: unused variable: `component_name`
   --> src\world\mod.rs:463:14
    |
463 |         for (component_name, component) in &mut entity.components {
    |              ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_component_name`

warning: unused variable: `state`
   --> src\world\mod.rs:470:49
    |
470 |                 EntityComponent::AI { behavior, state } => {
    |                                                 ^^^^^ help: try ignoring the field: `state: _`

warning: unused variable: `color`
  --> src\states\mod.rs:88:34
   |
88 |             RenderCommand::Clear(color) => {
   |                                  ^^^^^ help: if this is intentional, prefix it with an underscore: `_color`

warning: unused variable: `position`
  --> src\states\mod.rs:91:41
   |
91 |             RenderCommand::DrawSprite { position, size, color } => {
   |                                         ^^^^^^^^ help: try ignoring the field: `position: _`

warning: unused variable: `size`
  --> src\states\mod.rs:91:51
   |
91 |             RenderCommand::DrawSprite { position, size, color } => {
   |                                                   ^^^^ help: try ignoring the field: `size: _`

warning: unused variable: `color`
  --> src\states\mod.rs:91:57
   |
91 |             RenderCommand::DrawSprite { position, size, color } => {
   |                                                         ^^^^^ help: try ignoring the field: `color: _`

warning: unused variable: `text`
  --> src\states\mod.rs:94:39
   |
94 |             RenderCommand::DrawText { text, position, size, color } => {
   |                                       ^^^^ help: try ignoring the field: `text: _`

warning: unused variable: `position`
  --> src\states\mod.rs:94:45
   |
94 |             RenderCommand::DrawText { text, position, size, color } => {
   |                                             ^^^^^^^^ help: try ignoring the field: `position: _`

warning: unused variable: `size`
  --> src\states\mod.rs:94:55
   |
94 |             RenderCommand::DrawText { text, position, size, color } => {
   |                                                       ^^^^ help: try ignoring the field: `size: _`

warning: unused variable: `color`
  --> src\states\mod.rs:94:61
   |
94 |             RenderCommand::DrawText { text, position, size, color } => {
   |                                                             ^^^^^ help: try ignoring the field: `color: _`

warning: unused variable: `transition`
   --> src\states\menu.rs:351:21
    |
351 |                 let transition = self.confirm_selection();
    |                     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transition`

error[E0499]: cannot borrow `*self` as mutable more than once at a time
   --> src\states\battle.rs:449:17
    |
445 |             if let Some(target) = self.player_team.get_mut(target_index) {
    |                                   ---------------- first mutable borrow occurs here
...
449 |                 self.add_battle_log(format!("{}鍙楀埌浜唟}鐐逛激瀹筹紒", target.name, damage));
    |                 ^^^^ second mutable borrow occurs here            ----------- first borrow later used here

error[E0499]: cannot borrow `*self` as mutable more than once at a time
   --> src\states\battle.rs:452:21
    |
445 |             if let Some(target) = self.player_team.get_mut(target_index) {
    |                                   ---------------- first mutable borrow occurs here
...
452 |                     self.add_battle_log(format!("{}鍊掍笅浜嗭紒", target.name));
    |                     ^^^^ second mutable borrow occurs here    ----------- first borrow later used here

error[E0499]: cannot borrow `*self` as mutable more than once at a time
   --> src\states\battle.rs:459:13
    |
455 |         } else if let Some(target) = self.enemy_team.get_mut(target_index - self.player_team.len()) {
    |                                      --------------- first mutable borrow occurs here
...
459 |             self.add_battle_log(format!("{}鍙楀埌浜唟}鐐逛激瀹筹紒", target.name, damage));
    |             ^^^^ second mutable borrow occurs here            ----------- first borrow later used here

error[E0499]: cannot borrow `*self` as mutable more than once at a time
   --> src\states\battle.rs:462:17
    |
455 |         } else if let Some(target) = self.enemy_team.get_mut(target_index - self.player_team.len()) {
    |                                      --------------- first mutable borrow occurs here
...
462 |                 self.add_battle_log(format!("{}鍊掍笅浜嗭紒", target.name));
    |                 ^^^^ second mutable borrow occurs here    ----------- first borrow later used here

warning: unused variable: `move_id`
   --> src\states\battle.rs:481:32
    |
481 |     fn calculate_damage(&self, move_id: u32, target_index: usize) -> u32 {
    |                                ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_move_id`

warning: unused variable: `target_index`
   --> src\states\battle.rs:481:46
    |
481 |     fn calculate_damage(&self, move_id: u32, target_index: usize) -> u32 {
    |                                              ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_target_index`

warning: unused variable: `target`
   --> src\states\battle.rs:491:50
    |
491 |     fn execute_item_use(&mut self, item_id: u32, target: Option<usize>) -> Result<(), GameError> {
    |                                                  ^^^^^^ help: if this is intentional, prefix it with an underscore: `_target`

warning: unused variable: `status_id`
   --> src\states\battle.rs:572:18
    |
572 |             for &status_id in &pokemon.status_effects {
    |                  ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_status_id`

warning: unused variable: `status_id`
   --> src\states\battle.rs:578:18
    |
578 |             for &status_id in &pokemon.status_effects {
    |                  ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_status_id`

warning: unused variable: `button_id`
   --> src\states\battle.rs:759:18
    |
759 |         for (i, &button_id) in self.move_buttons.iter().enumerate() {
    |                  ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_button_id`

warning: unused variable: `event`
   --> src\states\battle.rs:812:40
    |
812 |     fn handle_gamepad_event(&mut self, event: &GamepadEvent) -> Result<bool, GameError> {
    |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `button_id`
   --> src\states\settings.rs:385:24
    |
385 |         for (category, button_id) in &self.category_buttons {
    |                        ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_button_id`

error[E0382]: borrow of moved value: `state`
   --> src\states\loading.rs:100:32
    |
98  |     pub fn set_next_state(&mut self, state: GameStateType) {
    |                                      ----- move occurs because `state` has type `GameStateType`, which does not implement the `Copy` trait
99  |         self.next_state = state;
    |                           ----- value moved here
100 |         debug!("璁剧疆涓嬩竴鐘舵€? {:?}", state);
    |                                      ^^^^^ value borrowed here after move
    |
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `debug` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider cloning the value if the performance cost is acceptable
    |
99  |         self.next_state = state.clone();
    |                                ++++++++

error[E0507]: cannot move out of `self.next_state` which is behind a mutable reference
   --> src\states\loading.rs:381:48
    |
381 |             return Ok(StateTransition::Replace(self.next_state));
    |                                                ^^^^^^^^^^^^^^^ move occurs because `self.next_state` has type `GameStateType`, which does not implement the `Copy` trait
    |
help: consider cloning the value if the performance cost is acceptable
    |
381 |             return Ok(StateTransition::Replace(self.next_state.clone()));
    |                                                               ++++++++

warning: unused variable: `event`
   --> src\states\loading.rs:408:38
    |
408 |     fn handle_mouse_event(&mut self, event: &MouseEvent) -> Result<bool, GameError> {
    |                                      ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

error[E0382]: borrow of moved value: `state_type`
   --> src\states\mod.rs:269:32
    |
264 |     pub fn register_state_factory<F>(&mut self, state_type: GameStateType, factory: F)
    |                                                 ---------- move occurs because `state_type` has type `GameStateType`, which does not implement the `Copy` trait
...
268 |         self.state_factories.insert(state_type, Box::new(factory));
    |                                     ---------- value moved here
269 |         debug!("娉ㄥ唽鐘舵€佸伐鍘? {:?}", state_type);
    |                                      ^^^^^^^^^^ value borrowed here after move
    |
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `debug` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider cloning the value if the performance cost is acceptable
    |
268 |         self.state_factories.insert(state_type.clone(), Box::new(factory));
    |                                               ++++++++

error[E0382]: borrow of moved value: `state_type`
   --> src\states\mod.rs:289:17
    |
273 |     pub fn push_state(&mut self, state_type: GameStateType) -> Result<StateId, GameError> {
    |                                  ---------- move occurs because `state_type` has type `GameStateType`, which does not implement the `Copy` trait
...
285 |         let state_id = self.create_state(state_type)?;
    |                                          ---------- value moved here
...
289 |                 state_type, state_id, self.state_stack.len());
    |                 ^^^^^^^^^^ value borrowed here after move
    |
note: consider changing this parameter type in method `create_state` to borrow instead if owning the value isn't necessary
   --> src\states\mod.rs:500:44
    |
500 |     fn create_state(&mut self, state_type: GameStateType) -> Result<StateId, GameError> {
    |        ------------ in this method         ^^^^^^^^^^^^^ this parameter takes ownership of the value
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `debug` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider cloning the value if the performance cost is acceptable
    |
285 |         let state_id = self.create_state(state_type.clone())?;
    |                                                    ++++++++

error[E0507]: cannot move out of `s.state_type` which is behind a shared reference
   --> src\states\mod.rs:352:41
    |
352 |         self.state_stack.last().map(|s| s.state_type)
    |                                         ^^^^^^^^^^^^ move occurs because `s.state_type` has type `GameStateType`, which does not implement the `Copy` trait
    |
help: consider cloning the value if the performance cost is acceptable
    |
352 |         self.state_stack.last().map(|s| s.state_type.clone())
    |                                                     ++++++++

warning: unused variable: `previous_state`
   --> src\input\keyboard.rs:228:13
    |
228 |         let previous_state = self.key_states.get(&key).unwrap_or(&KeyState::Released);
    |             ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_previous_state`

warning: unused variable: `delta_time`
   --> src\input\mouse.rs:109:30
    |
109 |     pub fn update(&mut self, delta_time: f32) {
    |                              ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_delta_time`

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\input\gamepad.rs:325:35
    |
320 |         if let Some(gamepad) = self.gamepads.get_mut(&gamepad_id) {
    |                                ------------- mutable borrow occurs here
...
325 |             let processed_value = self.apply_dead_zone(axis, value, gamepad.dead_zone);
    |                                   ^^^^ immutable borrow occurs here ----------------- mutable borrow later used here

warning: unused variable: `touch`
   --> src\input\touch.rs:438:13
    |
438 |         for touch in self.active_touches.values_mut() {
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_touch`

warning: variable `any_input` is assigned to, but never used
   --> src\input\mod.rs:499:21
    |
499 |             let mut any_input = false;
    |                     ^^^^^^^^^
    |
    = note: consider using `_any_input` instead

warning: value assigned to `any_input` is never read
   --> src\input\mod.rs:505:21
    |
505 |                     any_input = true;
    |                     ^^^^^^^^^
    |
    = help: maybe it is overwritten before being read?
    = note: `#[warn(unused_assignments)]` on by default

error[E0502]: cannot borrow `*self` as mutable because it is also borrowed as immutable
   --> src\input\mod.rs:528:17
    |
497 |         for (action, bindings) in &self.config.bindings {
    |                                   ---------------------
    |                                   |
    |                                   immutable borrow occurs here
    |                                   immutable borrow later used here
...
528 |                 self.add_to_buffer(action.clone());
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here

error[E0382]: borrow of moved value: `version`
   --> src\data\serializer.rs:176:31
    |
174 |     pub fn register_version_handler(&mut self, version: String, handler: Box<dyn VersionHandler>) {
    |                                                ------- move occurs because `version` has type `std::string::String`, which does not implement the `Copy` trait
175 |         self.version_handlers.insert(version, handler);
    |                                      ------- value moved here
176 |         debug!("娉ㄥ唽鐗堟湰澶勭悊鍣? {}", version);
    |                                      ^^^^^^^ value borrowed here after move
    |
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `debug` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider cloning the value if the performance cost is acceptable
    |
175 |         self.version_handlers.insert(version.clone(), handler);
    |                                             ++++++++

error[E0382]: borrow of moved value: `serialized_data`
   --> src\data\serializer.rs:241:25
    |
198 |         let mut serialized_data = handler.serialize(data)?;
    |             ------------------- move occurs because `serialized_data` has type `std::vec::Vec<u8>`, which does not implement the `Copy` trait
...
234 |             data: serialized_data,
    |                   --------------- value moved here
...
241 |             size_final: serialized_data.len(),
    |                         ^^^^^^^^^^^^^^^ value borrowed here after move
    |
help: consider cloning the value if the performance cost is acceptable
    |
234 |             data: serialized_data.clone(),
    |                                  ++++++++

warning: unused variable: `data`
   --> src\data\serializer.rs:411:31
    |
411 |     fn verify_checksum(&self, data: &[u8]) -> bool {
    |                               ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable
   --> src\data\database.rs:602:69
    |
593 |         match &mut self.connection {
    |               -------------------- mutable borrow occurs here
...
602 |                 let rows = stmt.query_map(sqlite_params.as_slice(), |row| {
    |                                                                     ^^^^^ immutable borrow occurs here
...
607 |                         let query_value = self.convert_sqlite_value(value);
    |                                           ---- second borrow occurs due to use of `*self` in closure
...
619 |             }
    |             - mutable borrow might be used here, when `stmt` is dropped and runs the `Drop` code for type `Statement`

error[E0499]: cannot borrow `self.system_manager` as mutable more than once at a time
   --> src\ecs\mod.rs:239:9
    |
239 |         self.system_manager.update(self, delta_time)?;
    |         ^^^^^^^^^^^^^^^^^^^^------^----^^^^^^^^^^^^^
    |         |                   |      |
    |         |                   |      first mutable borrow occurs here
    |         |                   first borrow later used by call
    |         second mutable borrow occurs here

error[E0499]: cannot borrow `*self` as mutable more than once at a time
   --> src\ecs\mod.rs:239:36
    |
239 |         self.system_manager.update(self, delta_time)?;
    |         ------------------- ------ ^^^^ second mutable borrow occurs here
    |         |                   |
    |         |                   first borrow later used by call
    |         first mutable borrow occurs here

warning: unused variable: `cached_result`
   --> src\ecs\mod.rs:261:25
    |
261 |             if let Some(cached_result) = self.query_cache.get(&query_key) {
    |                         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cached_result`

Some errors have detailed explanations: E0004, E0061, E0063, E0223, E0277, E0308, E0382, E0499, E0502...
For more information about an error, try `rustc --explain E0004`.
warning: `pokemongo` (lib) generated 178 warnings
warning: pokemongo@0.1.0: native feature鏈惎鐢紝璺宠繃C++妯″潡缂栬瘧
error: could not compile `pokemongo` (lib) due to 292 previous errors; 178 warnings emitted
